import"./Bzak7iHL.js";import{L as m}from"./CD3B4HDh.js";import{p as ds,aR as ys,q as $e,ah as fs,r as A,v as hs,o as Fs,y as f,w as $,z as F,x as g,A as w}from"./D01uuYru.js";import{h as O}from"./DkS15D3Q.js";import{l as As,s as ms}from"./DwibsWFW.js";function gs(n,e){ds(e,!0);const s=!0;var o=ys(),t=$e(o);return fs(t,()=>e.children),A(n,o),hs({prerender:s})}const In={title:"Introduction to Go",description:"A concise intro to Go, covering its design, syntax, concurrency model, standard library, and ecosystem.",slug:"introduction-to-go",authors:["Lucas McClean"],reviewers:["Lucas Velasco"],date:"2025-10-15T00:00:00.000Z",updated:"2025-10-15T00:00:00.000Z",tags:["go","golang","beginner","programming","concurrency"],readTime:12,image:{src:"",alt:""},published:!0,layout:"article"},{title:Gr,description:Ur,slug:Lr,authors:Mr,reviewers:Wr,date:Vr,updated:Jr,tags:Kr,readTime:Yr,image:qr,published:Xr,layout:Hr}=In;var _s=Fs(`<p>This article is merely meant as a brief introduction that I hope will encourage
you to further research Go and its principles. It is far from exhaustive but
does capture the core ideas of Go and some of the features that I find most
interesting. I will cover Go’s: <!>, <!>, <!>, <!>, <!>, and approach to <!>. At the end of each section I also add
resources that I found useful when I was learning Go.</p> <p><em>The only expectation is that you are familiar with programming basics – though
if you have less experience, I think you will still find most of the article
digestible.</em></p> <p><em>Note: examples target Go 1.25</em></p> <h2 id="gos-design">Go’s Design<!></h2> <p>Go is a programming language built around the core principles of <strong>simplicity</strong>, <strong>efficiency</strong>, and <strong>concurrency</strong>. Many programming languages prioritize
expressiveness or control. But Go often makes sacrifices in these areas in
exchange for clarity and predictable performance.</p> <p>In my experience, simplicity is the greatest indicator of an effective and
maintainable code base. The simpler a project is – both architecturally and
line-by-line – the easier it is for developers to work with it effectively. Go’s
design encourages code that is more readable and maintainable, almost by
default.</p> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-syntax">Go’s Syntax<!></h2> <p>If you’re familiar with general programming concepts, then Go shouldn’t be too
difficult to pick up. Its syntax is relatively basic, with just a few key
differences from other C-like languages.</p> <!> <p>The main <em>syntactic</em> differences from other languages:</p> <ul><li>No semicolons at the ends of lines</li> <li>Types <em>after</em> identifiers in declarations (<code>x int</code>)</li> <li>Export via capitalization, rather than a keyword</li> <li>No parentheses are present around conditions</li></ul> <p>Go doesn’t have classes or inheritance. Instead, it uses <strong>structs</strong> for
grouping data and <strong>methods</strong> (i.e. functions that operate on types) for
behaviour.</p> <p>Go’s methods look different from methods in many other mainstream languages.
They are defined outside the struct and use a receiver to specify which type
they operate on.</p> <!> <p>Go automatically handles pointer/value method calls; so you can call both <code>ex.PrintName()</code> and <code>ex.MakeCool()</code> the same way, and Go will handle the
reference conversion for you.</p> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-error-handling">Go’s Error Handling<!></h2> <p>I’ve made this its own section, as I often find a language’s approach to error
handling to be highly indicative of its general principles. Go’s approach is
‘errors as values.’</p> <!> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-ecosystem">Go’s Ecosystem<!></h2> <p>The pillars that Go is built on also affect the package system and community. Go
developers tend to avoid dependencies if possible and prefer straightforward
designs. There’s a preference for ‘obvious’ designs, and composition as opposed
to inheritance.</p> <p>In most Go codebases, you’ll find:</p> <ul><li>Shallow directory structures</li> <li>Minimal abstraction</li> <li>Composition over inheritance</li> <li>A preference for plain interfaces and simple tooling</li></ul> <p>To start a new Go project:</p> <!> <p>To add a dependency:</p> <!> <p>To clean up unused or redundant dependencies:</p> <!> <p>And finally, to run your project:</p> <!> <p><code>go.mod</code> defines the module path and your direct dependencies and the hashes of
those dependencies are stored in <code>go.sum</code>.</p> <p>Some other tools you may see:</p> <ul><li><code>gofmt</code> / <code>go fmt</code>: formatting (Go culture strongly relies on auto-formatting)</li> <li><code>go vet</code> and <code>staticcheck</code>: static analysis</li> <li><code>go test</code>: testing</li> <li><code>go install pkg@version</code>: install a binary from a module</li></ul> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-concurrency-model">Go’s Concurrency Model<!></h2> <p>In Go, concurrency is first class: it’s built right into the syntax of the
language. The primary tool for concurrency in Go is the <strong>goroutine</strong>.</p> <!> <p>The other core concurrency tool is the <strong>channel</strong>. Channels are used for
communicating between goroutines, and they come with some of their own syntax.</p> <!> <p><em>Resources</em>: <!>, <!>, <!></p> <h2 id="gos-standard-library">Go’s Standard Library<!></h2> <p>Given the Go community’s general opposition to unnecessary dependencies, Go’s
standard library is quite comprehensive – particularly in the areas of I/O and
networking. It is very often not necessary to look outside the standard library.
Before adding a dependency, always check <!> and see if it provides what you
need.</p> <p>Some of the big packages:</p> <ul><li><code>net</code>: TCP, UDP, HTTP, DNS, Unix sockets, and more (including <code>net/http</code>).</li> <li><code>io</code> / <code>os</code>: file I/O, environment, <code>io.Reader</code>/<code>io.Writer</code> patterns.</li> <li><code>encoding</code>: JSON, XML, gob, base64, etc.</li> <li><code>crypto</code>: common cryptographic tools.</li> <li><code>testing</code>: unit tests, benchmarks, and examples.</li></ul> <p>Long story short: if you need it, Go often has a solid foundation in the
standard library.</p> <h2 id="further-resources">Further Resources<!></h2> <p>There’s still a lot I didn’t cover, and much left to explore. But I hope that
what I <em>did</em> show impressed you enough to continue looking into it. Go is one of
my favourite programming languages; I find the trade-offs it makes appealing,
and I love how simple it is to pick up.</p> <p><strong><!></strong> is a hands-on tour of the syntax and
standard library of Go. It walks you through all of its critical components with
a built-in editor.</p> <p><strong><!></strong> provides idioms for common
patterns. This was probably the resource I found <strong>most useful</strong> in my journey
learning more advanced Go.</p> <p><strong><!></strong> is the standard library
documentation.</p> <p><strong><!></strong> covers particular topics. Some topics I
didn’t mention or only briefly mentioned, such as generics, channels,
concurrency, and advanced error handling, are also worth exploring on the Go
Blog.</p> <p>If you have any questions or enjoyed the article, feel free to reach out! You
can find me on <!>.</p>`,1);function vs(n,e){const s=As(e,["children","$$slots","$$events","$$legacy"]);gs(n,ms(()=>s,()=>In,{children:(o,t)=>{var a=_s(),r=$e(a),c=f($(r));m(c,{href:"#gos-design",children:(u,_)=>{F();var d=g("Design");A(u,d)},$$slots:{default:!0}});var p=f(c,2);m(p,{href:"#gos-syntax",children:(u,_)=>{F();var d=g("Syntax");A(u,d)},$$slots:{default:!0}});var i=f(p,2);m(i,{href:"#gos-ecosystem",children:(u,_)=>{F();var d=g("Ecosystem");A(u,d)},$$slots:{default:!0}});var h=f(i,2);m(h,{href:"#gos-standard-library",children:(u,_)=>{F();var d=g("Standard Library");A(u,d)},$$slots:{default:!0}});var C=f(h,2);m(C,{href:"#gos-concurrency-model",children:(u,_)=>{F();var d=g("Concurrency Model");A(u,d)},$$slots:{default:!0}});var E=f(C,2);m(E,{href:"#gos-error-handling",children:(u,_)=>{F();var d=g("Error Handling");A(u,d)},$$slots:{default:!0}}),F(),w(r);var v=f(r,6),Z=f($(v));m(Z,{"aria-label":"Link to this section",href:"#gos-design",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(v);var N=f(v,6),J=f($(N),2);m(J,{href:"https://go-proverbs.github.io/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Proverbs");A(u,d)},$$slots:{default:!0}});var un=f(J,2);m(un,{href:"https://go.dev/doc/effective_go",rel:"nofollow",children:(u,_)=>{F();var d=g("Effective Go");A(u,d)},$$slots:{default:!0}}),w(N);var K=f(N,2),T=f($(K));m(T,{"aria-label":"Link to this section",href:"#gos-syntax",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(K);var x=f(K,4);O(x,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// In Go, types come *after* the variable or function name</span></span>
<span class="line"><span style="color:#BB9AF7">var</span><span style="color:#C0CAF5"> test</span><span style="color:#BB9AF7"> int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Capitalized identifiers (functions, variables, types,</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// etc.) are *exported* (visible outside of the package)</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> y</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5">)</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">	return</span><span style="color:#C0CAF5"> x</span><span style="color:#89DDFF"> +</span><span style="color:#C0CAF5"> y</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// \`range\` can be used to iterate (only as of Go 1.22+)</span></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 5</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// Using formatted output</span></span>
<span class="line"><span style="color:#C0CAF5">		fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF"> "</span><span style="color:#89DDFF">,</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF">-</span><span style="color:#FF9E64">1</span><span style="color:#9ABDF5">))</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Traditional loop syntax also works:</span></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> 0</span><span style="color:#89DDFF">;</span><span style="color:#C0CAF5"> i</span><span style="color:#BB9AF7"> &#x3C;</span><span style="color:#FF9E64"> 5</span><span style="color:#89DDFF">;</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF">++</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">		fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF"> "</span><span style="color:#89DDFF">,</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF">-</span><span style="color:#FF9E64">1</span><span style="color:#9ABDF5">))</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Explicit type declaration</span></span>
<span class="line"><span style="color:#BB9AF7">	var</span><span style="color:#C0CAF5"> a</span><span style="color:#BB9AF7"> bool</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> true</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Short variable declaration which infers the type</span></span>
<span class="line"><span style="color:#C0CAF5">	b</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// No parentheses around conditions</span></span>
<span class="line"><span style="color:#BB9AF7">	if</span><span style="color:#C0CAF5"> a</span><span style="color:#BB9AF7"> ||</span><span style="color:#C0CAF5"> b</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">		fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">a or b</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">	x</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> 0</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Infinite loop</span></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">		if</span><span style="color:#C0CAF5"> x</span><span style="color:#BB9AF7"> ></span><span style="color:#FF9E64"> 10</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">			break</span></span>
<span class="line"><span style="color:#9ABDF5">		}</span></span>
<span class="line"><span style="color:#C0CAF5">		x</span><span style="color:#89DDFF">++</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var j=f(x,10);O(j,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">type</span><span style="color:#C0CAF5"> Example</span><span style="color:#BB9AF7"> struct</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#7DCFFF">	name</span><span style="color:#BB9AF7">           string</span><span style="color:#CCAAAA;font-style:italic"> // unexported (private)</span></span>
<span class="line"><span style="color:#7DCFFF">	isCool</span><span style="color:#BB9AF7">         bool</span></span>
<span class="line"><span style="color:#7DCFFF">	FavoriteNumber</span><span style="color:#BB9AF7"> int</span><span style="color:#CCAAAA;font-style:italic"> // exported (public)</span></span>
<span class="line"><span style="color:#7DCFFF">	SomeArray</span><span style="color:#9ABDF5">      []</span><span style="color:#BB9AF7">int</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Method with value receiver which receives a *copy* of</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// \`Example\`</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> PrintName</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// unexported \`name\` still available inside the method</span></span>
<span class="line"><span style="color:#C0CAF5">	fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">name</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">	fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#C0CAF5"> %t</span><span style="color:#89DDFF">\\</span><span style="color:#9ECE6A">n</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">FavoriteNumber</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">isCool</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Method with pointer receiver which allows modification of</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// the original</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#89DDFF">*</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> MakeCool</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">	e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">FavoriteNumber</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> 42</span></span>
<span class="line"><span style="color:#C0CAF5">	e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">isCool</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> true</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Go doesn't require constructors, but a common convention</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// is to use \`NewType\`</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> NewExample</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">name</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">	return</span><span style="color:#89DDFF"> &#x26;</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">{</span></span>
<span class="line"><span style="color:#7DCFFF">		name</span><span style="color:#89DDFF">:</span><span style="color:#C0CAF5">           name</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#7DCFFF">		isCool</span><span style="color:#89DDFF">:</span><span style="color:#FF9E64">         false</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#7DCFFF">		FavoriteNumber</span><span style="color:#89DDFF">:</span><span style="color:#FF9E64"> 67</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// Because \`SomeArray\` is omitted, it will default</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// to \`nil\`</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// The main function runs when a package is executed</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">	ex</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> NewExample</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Wyatt</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">	ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintName</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: Wyatt</span></span>
<span class="line"><span style="color:#C0CAF5">	ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: 67 false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">	ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">MakeCool</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic">  // Modify through pointer receiver</span></span>
<span class="line"><span style="color:#C0CAF5">	ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: 42 true</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var dn=f(j,4),Rn=f($(dn),2);m(Rn,{href:"https://go.dev/tour/welcome/1",rel:"nofollow",children:(u,_)=>{F();var d=g("Tour of Go");A(u,d)},$$slots:{default:!0}});var Xe=f(Rn,2);m(Xe,{href:"https://gobyexample.com/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go by Example");A(u,d)},$$slots:{default:!0}}),w(dn);var yn=f(dn,2),He=f($(yn));m(He,{"aria-label":"Link to this section",href:"#gos-error-handling",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(yn);var Gn=f(yn,4);O(Gn,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">errors</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Go supports multiple return values</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> canFail</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> (</span><span style="color:#BB9AF7">int</span><span style="color:#89DDFF">,</span><span style="color:#BB9AF7"> error</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">	if</span><span style="color:#C0CAF5"> x</span><span style="color:#BB9AF7"> &#x3C;=</span><span style="color:#FF9E64"> 5</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">		return</span><span style="color:#FF9E64"> 0</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> errors</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">New</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">x should be greater than 5</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span><span style="color:#BB9AF7"> else</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">		return</span><span style="color:#C0CAF5"> x</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> nil</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">	value</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> err</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> canFail</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">4</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// You'll see this check quite often in Go code</span></span>
<span class="line"><span style="color:#BB9AF7">	if</span><span style="color:#C0CAF5"> err</span><span style="color:#BB9AF7"> !=</span><span style="color:#FF9E64"> nil</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">		fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Uh oh: </span><span style="color:#C0CAF5">%v</span><span style="color:#89DDFF">\\</span><span style="color:#9ECE6A">n</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> err</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">		return</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"><span style="color:#C0CAF5">	fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Success: </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> was big enough!</span><span style="color:#89DDFF">\\</span><span style="color:#9ECE6A">n</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> value</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var fn=f(Gn,2),Un=f($(fn),2);m(Un,{href:"https://go.dev/blog/go1.13-errors",rel:"nofollow",children:(u,_)=>{F();var d=g("Working with Errors");A(u,d)},$$slots:{default:!0}});var Qe=f(Un,2);m(Qe,{href:"https://go.dev/blog/error-handling-and-go",rel:"nofollow",children:(u,_)=>{F();var d=g("Error Handling in Go");A(u,d)},$$slots:{default:!0}}),w(fn);var hn=f(fn,2),ns=f($(hn));m(ns,{"aria-label":"Link to this section",href:"#gos-ecosystem",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(hn);var Ln=f(hn,10);O(Ln,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#CCAAAA;font-style:italic"># First, install Go from https://go.dev/doc/install</span></span>
<span class="line"><span style="color:#C0CAF5">mkdir</span><span style="color:#9ECE6A"> my-project</span></span>
<span class="line"><span style="color:#0DB9D7">cd</span><span style="color:#9ECE6A"> my-project</span></span>
<span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> mod</span><span style="color:#9ECE6A"> init</span><span style="color:#9ECE6A"> github.com/your-username/my-project</span></span></code></pre>`);var Mn=f(Ln,4);O(Mn,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> get</span><span style="color:#9ECE6A"> github.com/dependency-owner/dependency-name@latest</span></span></code></pre>');var Wn=f(Mn,4);O(Wn,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> mod</span><span style="color:#9ECE6A"> tidy</span></span></code></pre>');var Vn=f(Wn,4);O(Vn,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> run</span><span style="color:#9ECE6A"> .</span></span></code></pre>');var Fn=f(Vn,8),Jn=f($(Fn),2);m(Jn,{href:"https://awesome-go.com/",rel:"nofollow",children:(u,_)=>{F();var d=g("Awesome Go");A(u,d)},$$slots:{default:!0}});var es=f(Jn,2);m(es,{href:"https://go.dev/ref/mod",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Modules Reference");A(u,d)},$$slots:{default:!0}}),w(Fn);var An=f(Fn,2),ss=f($(An));m(ss,{"aria-label":"Link to this section",href:"#gos-concurrency-model",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(An);var Kn=f(An,4);O(Kn,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">sync</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> DoSomething</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> wg</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5">sync</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">WaitGroup</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// \`defer\` performs the action at the end of the function</span></span>
<span class="line"><span style="color:#BB9AF7">	defer</span><span style="color:#C0CAF5"> wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Done</span><span style="color:#9ABDF5">()</span></span>
<span class="line"><span style="color:#C0CAF5">	time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sleep</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Duration</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">x</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5"> time</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">Second</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">	fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Waited for </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> seconds</span><span style="color:#89DDFF">\\</span><span style="color:#9ECE6A">n</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> x</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">	var</span><span style="color:#C0CAF5"> wg</span><span style="color:#C0CAF5"> sync</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">WaitGroup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 4</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">		wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Add</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// Simply put \`go\` in front of a function to run</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// it as a goroutine</span></span>
<span class="line"><span style="color:#BB9AF7">		go</span><span style="color:#7AA2F7"> DoSomething</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#89DDFF"> &#x26;</span><span style="color:#C0CAF5">wg</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Wait for all goroutines to finish</span></span>
<span class="line"><span style="color:#C0CAF5">	wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Wait</span><span style="color:#9ABDF5">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Both output:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Waited for 0 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Waited for 1 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Waited for 2 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Waited for 3 seconds</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var Yn=f(Kn,4);O(Yn,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">	"</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">id</span><span style="color:#BB9AF7"> string</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> delay</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> ch</span><span style="color:#BB9AF7"> chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">	time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sleep</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Duration</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">delay</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5"> time</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">Second</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Put this message into the provided channel</span></span>
<span class="line"><span style="color:#C0CAF5">	ch</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5"> fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sprintf</span><span style="color:#9ABDF5">(</span></span>
<span class="line"><span style="color:#89DDFF">		"</span><span style="color:#C0CAF5">%s</span><span style="color:#9ECE6A"> finished after </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> seconds</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#C0CAF5">		id</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#C0CAF5">		delay</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#9ABDF5">	)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// \`make\` is used to create channels</span></span>
<span class="line"><span style="color:#C0CAF5">	ch1</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">	ch2</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Goroutine 1 will finish first and 2 will finish around</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// three seconds after</span></span>
<span class="line"><span style="color:#BB9AF7">	go</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Goroutine 1</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 2</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> ch1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">	go</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Goroutine 2</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 5</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> ch2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 2</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// \`select\` matches on whichever channel is ready</span></span>
<span class="line"><span style="color:#BB9AF7">		select</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">		// \`&#x3C;-\` used to receive value from channel</span></span>
<span class="line"><span style="color:#BB9AF7">		case</span><span style="color:#C0CAF5"> msg1</span><span style="color:#89DDFF"> :=</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5">ch1</span><span style="color:#89DDFF">:</span></span>
<span class="line"><span style="color:#C0CAF5">			fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">msg1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">		case</span><span style="color:#C0CAF5"> msg2</span><span style="color:#89DDFF"> :=</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5">ch2</span><span style="color:#89DDFF">:</span></span>
<span class="line"><span style="color:#C0CAF5">			fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">msg2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">		}</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Outputs:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Goroutine 1 finished after 2 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Goroutine 2 finished after 5 seconds</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Capacity is specified as last argument to \`make\`</span></span>
<span class="line"><span style="color:#C0CAF5">	buffered</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">	buffered</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#FF9E64"> 10</span></span>
<span class="line"><span style="color:#C0CAF5">	buffered</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#FF9E64"> 20</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// closing signals no more values will be sent</span></span>
<span class="line"><span style="color:#7AA2F7">	close</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">buffered</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// 'range' can be used to receive values until the</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// channel closes</span></span>
<span class="line"><span style="color:#BB9AF7">	for</span><span style="color:#C0CAF5"> val</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#C0CAF5"> buffered</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">		fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Buffered value: </span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF">\\</span><span style="color:#9ECE6A">n</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> val</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Outptuts:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Buffered value: 10</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">	// Buffered value: 20</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var mn=f(Yn,2),qn=f($(mn),2);m(qn,{href:"https://go101.org/article/channel.html",rel:"nofollow",children:(u,_)=>{F();var d=g("Go 101");A(u,d)},$$slots:{default:!0}});var Xn=f(qn,2);m(Xn,{href:"https://www.youtube.com/watch?v=f6kdp27TYZs",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Concurrency Patterns (video)");A(u,d)},$$slots:{default:!0}});var os=f(Xn,2);m(os,{href:"https://go.dev/ref/mem",rel:"nofollow",children:(u,_)=>{F();var d=g("The Go Memory Model");A(u,d)},$$slots:{default:!0}}),w(mn);var gn=f(mn,2),ts=f($(gn));m(ts,{"aria-label":"Link to this section",href:"#gos-standard-library",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(gn);var _n=f(gn,2),as=f($(_n));m(as,{href:"https://pkg.go.dev/std",rel:"nofollow",children:(u,_)=>{F();var d=g("Go’s Standard Library");A(u,d)},$$slots:{default:!0}}),F(),w(_n);var vn=f(_n,8),rs=f($(vn));m(rs,{"aria-label":"Link to this section",href:"#further-resources",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(vn);var Dn=f(vn,4),Hn=$(Dn),ls=$(Hn);m(ls,{href:"https://go.dev/tour/",rel:"nofollow",children:(u,_)=>{F();var d=g("Tour of Go");A(u,d)},$$slots:{default:!0}}),w(Hn),F(),w(Dn);var Cn=f(Dn,2),Qn=$(Cn),cs=$(Qn);m(cs,{href:"https://go.dev/doc/effective_go",rel:"nofollow",children:(u,_)=>{F();var d=g("Effective Go");A(u,d)},$$slots:{default:!0}}),w(Qn),F(3),w(Cn);var bn=f(Cn,2),ne=$(bn),ps=$(ne);m(ps,{href:"https://pkg.go.dev/std",rel:"nofollow",children:(u,_)=>{F();var d=g("pkg.go.dev/std");A(u,d)},$$slots:{default:!0}}),w(ne),F(),w(bn);var $n=f(bn,2),ee=$($n),is=$(ee);m(is,{href:"https://go.dev/blog/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Blog");A(u,d)},$$slots:{default:!0}}),w(ee),F(),w($n);var se=f($n,2),us=f($(se));m(us,{href:"https://www.linkedin.com/in/lucasmcclean",rel:"nofollow",children:(u,_)=>{F();var d=g("LinkedIn");A(u,d)},$$slots:{default:!0}}),F(),w(se),A(o,a)},$$slots:{default:!0}}))}const Ds=Object.freeze(Object.defineProperty({__proto__:null,default:vs,metadata:In},Symbol.toStringTag,{value:"Module"}));function l(n,e,s){function o(c,p){var i;Object.defineProperty(c,"_zod",{value:c._zod??{},enumerable:!1}),(i=c._zod).traits??(i.traits=new Set),c._zod.traits.add(n),e(c,p);for(const h in r.prototype)h in c||Object.defineProperty(c,h,{value:r.prototype[h].bind(c)});c._zod.constr=r,c._zod.def=p}const t=(s==null?void 0:s.Parent)??Object;class a extends t{}Object.defineProperty(a,"name",{value:n});function r(c){var p;const i=s!=null&&s.Parent?new a:this;o(i,c),(p=i._zod).deferred??(p.deferred=[]);for(const h of i._zod.deferred)h();return i}return Object.defineProperty(r,"init",{value:o}),Object.defineProperty(r,Symbol.hasInstance,{value:c=>{var p,i;return s!=null&&s.Parent&&c instanceof s.Parent?!0:(i=(p=c==null?void 0:c._zod)==null?void 0:p.traits)==null?void 0:i.has(n)}}),Object.defineProperty(r,"name",{value:n}),r}class W extends Error{constructor(){super("Encountered Promise during synchronous parse. Use .parseAsync() instead.")}}class we extends Error{constructor(e){super(`Encountered unidirectional transform during encode: ${e}`),this.name="ZodEncodeError"}}const ke={};function U(n){return ke}function Cs(n){const e=Object.values(n).filter(o=>typeof o=="number");return Object.entries(n).filter(([o,t])=>e.indexOf(+o)===-1).map(([o,t])=>t)}function Bn(n,e){return typeof e=="bigint"?e.toString():e}function xn(n){return{get value(){{const e=n();return Object.defineProperty(this,"value",{value:e}),e}}}}function Pn(n){return n==null}function Tn(n){const e=n.startsWith("^")?1:0,s=n.endsWith("$")?n.length-1:n.length;return n.slice(e,s)}function bs(n,e){const s=(n.toString().split(".")[1]||"").length,o=e.toString();let t=(o.split(".")[1]||"").length;if(t===0&&/\d?e-\d?/.test(o)){const p=o.match(/\d?e-(\d?)/);p!=null&&p[1]&&(t=Number.parseInt(p[1]))}const a=s>t?s:t,r=Number.parseInt(n.toFixed(a).replace(".","")),c=Number.parseInt(e.toFixed(a).replace(".",""));return r%c/10**a}const oe=Symbol("evaluating");function D(n,e,s){let o;Object.defineProperty(n,e,{get(){if(o!==oe)return o===void 0&&(o=oe,o=s()),o},set(t){Object.defineProperty(n,e,{value:t})},configurable:!0})}function $s(n){return Object.create(Object.getPrototypeOf(n),Object.getOwnPropertyDescriptors(n))}function R(n,e,s){Object.defineProperty(n,e,{value:s,writable:!0,enumerable:!0,configurable:!0})}function V(...n){const e={};for(const s of n){const o=Object.getOwnPropertyDescriptors(s);Object.assign(e,o)}return Object.defineProperties({},e)}function te(n){return JSON.stringify(n)}const Be="captureStackTrace"in Error?Error.captureStackTrace:(...n)=>{};function on(n){return typeof n=="object"&&n!==null&&!Array.isArray(n)}const ws=xn(()=>{var n;if(typeof navigator<"u"&&((n=navigator==null?void 0:navigator.userAgent)!=null&&n.includes("Cloudflare")))return!1;try{const e=Function;return new e(""),!0}catch{return!1}});function Y(n){if(on(n)===!1)return!1;const e=n.constructor;if(e===void 0)return!0;const s=e.prototype;return!(on(s)===!1||Object.prototype.hasOwnProperty.call(s,"isPrototypeOf")===!1)}function ze(n){return Y(n)?{...n}:n}const ks=new Set(["string","number","symbol"]);function rn(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function G(n,e,s){const o=new n._zod.constr(e??n._zod.def);return(!e||s!=null&&s.parent)&&(o._zod.parent=n),o}function y(n){const e=n;if(!e)return{};if(typeof e=="string")return{error:()=>e};if((e==null?void 0:e.message)!==void 0){if((e==null?void 0:e.error)!==void 0)throw new Error("Cannot specify both `message` and `error` params");e.error=e.message}return delete e.message,typeof e.error=="string"?{...e,error:()=>e.error}:e}function Bs(n){return Object.keys(n).filter(e=>n[e]._zod.optin==="optional"&&n[e]._zod.optout==="optional")}const zs={safeint:[Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER],int32:[-2147483648,2147483647],uint32:[0,4294967295],float32:[-34028234663852886e22,34028234663852886e22],float64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function Es(n,e){const s=n._zod.def,o=V(n._zod.def,{get shape(){const t={};for(const a in e){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);e[a]&&(t[a]=s.shape[a])}return R(this,"shape",t),t},checks:[]});return G(n,o)}function Zs(n,e){const s=n._zod.def,o=V(n._zod.def,{get shape(){const t={...n._zod.def.shape};for(const a in e){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);e[a]&&delete t[a]}return R(this,"shape",t),t},checks:[]});return G(n,o)}function Is(n,e){if(!Y(e))throw new Error("Invalid input to extend: expected a plain object");const s=n._zod.def.checks;if(s&&s.length>0)throw new Error("Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.");const t=V(n._zod.def,{get shape(){const a={...n._zod.def.shape,...e};return R(this,"shape",a),a},checks:[]});return G(n,t)}function xs(n,e){if(!Y(e))throw new Error("Invalid input to safeExtend: expected a plain object");const s={...n._zod.def,get shape(){const o={...n._zod.def.shape,...e};return R(this,"shape",o),o},checks:n._zod.def.checks};return G(n,s)}function Ps(n,e){const s=V(n._zod.def,{get shape(){const o={...n._zod.def.shape,...e._zod.def.shape};return R(this,"shape",o),o},get catchall(){return e._zod.def.catchall},checks:[]});return G(n,s)}function Ts(n,e,s){const o=V(e._zod.def,{get shape(){const t=e._zod.def.shape,a={...t};if(s)for(const r in s){if(!(r in t))throw new Error(`Unrecognized key: "${r}"`);s[r]&&(a[r]=n?new n({type:"optional",innerType:t[r]}):t[r])}else for(const r in t)a[r]=n?new n({type:"optional",innerType:t[r]}):t[r];return R(this,"shape",a),a},checks:[]});return G(e,o)}function Ss(n,e,s){const o=V(e._zod.def,{get shape(){const t=e._zod.def.shape,a={...t};if(s)for(const r in s){if(!(r in a))throw new Error(`Unrecognized key: "${r}"`);s[r]&&(a[r]=new n({type:"nonoptional",innerType:t[r]}))}else for(const r in t)a[r]=new n({type:"nonoptional",innerType:t[r]});return R(this,"shape",a),a},checks:[]});return G(e,o)}function M(n,e=0){var s;if(n.aborted===!0)return!0;for(let o=e;o<n.issues.length;o++)if(((s=n.issues[o])==null?void 0:s.continue)!==!0)return!0;return!1}function Ee(n,e){return e.map(s=>{var o;return(o=s).path??(o.path=[]),s.path.unshift(n),s})}function H(n){return typeof n=="string"?n:n==null?void 0:n.message}function L(n,e,s){var t,a,r,c,p,i;const o={...n,path:n.path??[]};if(!n.message){const h=H((r=(a=(t=n.inst)==null?void 0:t._zod.def)==null?void 0:a.error)==null?void 0:r.call(a,n))??H((c=e==null?void 0:e.error)==null?void 0:c.call(e,n))??H((p=s.customError)==null?void 0:p.call(s,n))??H((i=s.localeError)==null?void 0:i.call(s,n))??"Invalid input";o.message=h}return delete o.inst,delete o.continue,e!=null&&e.reportInput||delete o.input,o}function Sn(n){return Array.isArray(n)?"array":typeof n=="string"?"string":"unknown"}function q(...n){const[e,s,o]=n;return typeof e=="string"?{message:e,code:"custom",input:s,inst:o}:{...e}}const Ze=(n,e)=>{n.name="$ZodError",Object.defineProperty(n,"_zod",{value:n._zod,enumerable:!1}),Object.defineProperty(n,"issues",{value:e,enumerable:!1}),n.message=JSON.stringify(e,Bn,2),Object.defineProperty(n,"toString",{value:()=>n.message,enumerable:!1})},Ie=l("$ZodError",Ze),xe=l("$ZodError",Ze,{Parent:Error});function Os(n,e=s=>s.message){const s={},o=[];for(const t of n.issues)t.path.length>0?(s[t.path[0]]=s[t.path[0]]||[],s[t.path[0]].push(e(t))):o.push(e(t));return{formErrors:o,fieldErrors:s}}function Ns(n,e){const s=e||function(a){return a.message},o={_errors:[]},t=a=>{for(const r of a.issues)if(r.code==="invalid_union"&&r.errors.length)r.errors.map(c=>t({issues:c}));else if(r.code==="invalid_key")t({issues:r.issues});else if(r.code==="invalid_element")t({issues:r.issues});else if(r.path.length===0)o._errors.push(s(r));else{let c=o,p=0;for(;p<r.path.length;){const i=r.path[p];p===r.path.length-1?(c[i]=c[i]||{_errors:[]},c[i]._errors.push(s(r))):c[i]=c[i]||{_errors:[]},c=c[i],p++}}};return t(n),o}const On=n=>(e,s,o,t)=>{const a=o?Object.assign(o,{async:!1}):{async:!1},r=e._zod.run({value:s,issues:[]},a);if(r instanceof Promise)throw new W;if(r.issues.length){const c=new((t==null?void 0:t.Err)??n)(r.issues.map(p=>L(p,a,U())));throw Be(c,t==null?void 0:t.callee),c}return r.value},Nn=n=>async(e,s,o,t)=>{const a=o?Object.assign(o,{async:!0}):{async:!0};let r=e._zod.run({value:s,issues:[]},a);if(r instanceof Promise&&(r=await r),r.issues.length){const c=new((t==null?void 0:t.Err)??n)(r.issues.map(p=>L(p,a,U())));throw Be(c,t==null?void 0:t.callee),c}return r.value},ln=n=>(e,s,o)=>{const t=o?{...o,async:!1}:{async:!1},a=e._zod.run({value:s,issues:[]},t);if(a instanceof Promise)throw new W;return a.issues.length?{success:!1,error:new(n??Ie)(a.issues.map(r=>L(r,t,U())))}:{success:!0,data:a.value}},js=ln(xe),cn=n=>async(e,s,o)=>{const t=o?Object.assign(o,{async:!0}):{async:!0};let a=e._zod.run({value:s,issues:[]},t);return a instanceof Promise&&(a=await a),a.issues.length?{success:!1,error:new n(a.issues.map(r=>L(r,t,U())))}:{success:!0,data:a.value}},Rs=cn(xe),Gs=n=>(e,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return On(n)(e,s,t)},Us=n=>(e,s,o)=>On(n)(e,s,o),Ls=n=>async(e,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return Nn(n)(e,s,t)},Ms=n=>async(e,s,o)=>Nn(n)(e,s,o),Ws=n=>(e,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return ln(n)(e,s,t)},Vs=n=>(e,s,o)=>ln(n)(e,s,o),Js=n=>async(e,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return cn(n)(e,s,t)},Ks=n=>async(e,s,o)=>cn(n)(e,s,o),Ys=/^[cC][^\s-]{8,}$/,qs=/^[0-9a-z]+$/,Xs=/^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/,Hs=/^[0-9a-vA-V]{20}$/,Qs=/^[A-Za-z0-9]{27}$/,no=/^[a-zA-Z0-9_-]{21}$/,eo=/^P(?:(\d+W)|(?!.*W)(?=\d|T\d)(\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+([.,]\d+)?S)?)?)$/,so=/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/,ae=n=>n?new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${n}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`):/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/,oo=/^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$/,to="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";function ao(){return new RegExp(to,"u")}const ro=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,lo=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/,co=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/([0-9]|[1-2][0-9]|3[0-2])$/,po=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,io=/^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/,Pe=/^[A-Za-z0-9_-]*$/,uo=/^(?=.{1,253}\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\.?$/,yo=/^\+(?:[0-9]){6,14}[0-9]$/,Te="(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))",fo=new RegExp(`^${Te}$`);function Se(n){const e="(?:[01]\\d|2[0-3]):[0-5]\\d";return typeof n.precision=="number"?n.precision===-1?`${e}`:n.precision===0?`${e}:[0-5]\\d`:`${e}:[0-5]\\d\\.\\d{${n.precision}}`:`${e}(?::[0-5]\\d(?:\\.\\d+)?)?`}function ho(n){return new RegExp(`^${Se(n)}$`)}function Fo(n){const e=Se({precision:n.precision}),s=["Z"];n.local&&s.push(""),n.offset&&s.push("([+-](?:[01]\\d|2[0-3]):[0-5]\\d)");const o=`${e}(?:${s.join("|")})`;return new RegExp(`^${Te}T(?:${o})$`)}const Ao=n=>{const e=n?`[\\s\\S]{${(n==null?void 0:n.minimum)??0},${(n==null?void 0:n.maximum)??""}}`:"[\\s\\S]*";return new RegExp(`^${e}$`)},mo=/^\d+$/,go=/^-?\d+(?:\.\d+)?/i,_o=/true|false/i,vo=/^[^A-Z]*$/,Do=/^[^a-z]*$/,I=l("$ZodCheck",(n,e)=>{var s;n._zod??(n._zod={}),n._zod.def=e,(s=n._zod).onattach??(s.onattach=[])}),Oe={number:"number",bigint:"bigint",object:"date"},Ne=l("$ZodCheckLessThan",(n,e)=>{I.init(n,e);const s=Oe[typeof e.value];n._zod.onattach.push(o=>{const t=o._zod.bag,a=(e.inclusive?t.maximum:t.exclusiveMaximum)??Number.POSITIVE_INFINITY;e.value<a&&(e.inclusive?t.maximum=e.value:t.exclusiveMaximum=e.value)}),n._zod.check=o=>{(e.inclusive?o.value<=e.value:o.value<e.value)||o.issues.push({origin:s,code:"too_big",maximum:e.value,input:o.value,inclusive:e.inclusive,inst:n,continue:!e.abort})}}),je=l("$ZodCheckGreaterThan",(n,e)=>{I.init(n,e);const s=Oe[typeof e.value];n._zod.onattach.push(o=>{const t=o._zod.bag,a=(e.inclusive?t.minimum:t.exclusiveMinimum)??Number.NEGATIVE_INFINITY;e.value>a&&(e.inclusive?t.minimum=e.value:t.exclusiveMinimum=e.value)}),n._zod.check=o=>{(e.inclusive?o.value>=e.value:o.value>e.value)||o.issues.push({origin:s,code:"too_small",minimum:e.value,input:o.value,inclusive:e.inclusive,inst:n,continue:!e.abort})}}),Co=l("$ZodCheckMultipleOf",(n,e)=>{I.init(n,e),n._zod.onattach.push(s=>{var o;(o=s._zod.bag).multipleOf??(o.multipleOf=e.value)}),n._zod.check=s=>{if(typeof s.value!=typeof e.value)throw new Error("Cannot mix number and bigint in multiple_of check.");(typeof s.value=="bigint"?s.value%e.value===BigInt(0):bs(s.value,e.value)===0)||s.issues.push({origin:typeof s.value,code:"not_multiple_of",divisor:e.value,input:s.value,inst:n,continue:!e.abort})}}),bo=l("$ZodCheckNumberFormat",(n,e)=>{var r;I.init(n,e),e.format=e.format||"float64";const s=(r=e.format)==null?void 0:r.includes("int"),o=s?"int":"number",[t,a]=zs[e.format];n._zod.onattach.push(c=>{const p=c._zod.bag;p.format=e.format,p.minimum=t,p.maximum=a,s&&(p.pattern=mo)}),n._zod.check=c=>{const p=c.value;if(s){if(!Number.isInteger(p)){c.issues.push({expected:o,format:e.format,code:"invalid_type",continue:!1,input:p,inst:n});return}if(!Number.isSafeInteger(p)){p>0?c.issues.push({input:p,code:"too_big",maximum:Number.MAX_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:n,origin:o,continue:!e.abort}):c.issues.push({input:p,code:"too_small",minimum:Number.MIN_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:n,origin:o,continue:!e.abort});return}}p<t&&c.issues.push({origin:"number",input:p,code:"too_small",minimum:t,inclusive:!0,inst:n,continue:!e.abort}),p>a&&c.issues.push({origin:"number",input:p,code:"too_big",maximum:a,inst:n})}}),$o=l("$ZodCheckMaxLength",(n,e)=>{var s;I.init(n,e),(s=n._zod.def).when??(s.when=o=>{const t=o.value;return!Pn(t)&&t.length!==void 0}),n._zod.onattach.push(o=>{const t=o._zod.bag.maximum??Number.POSITIVE_INFINITY;e.maximum<t&&(o._zod.bag.maximum=e.maximum)}),n._zod.check=o=>{const t=o.value;if(t.length<=e.maximum)return;const r=Sn(t);o.issues.push({origin:r,code:"too_big",maximum:e.maximum,inclusive:!0,input:t,inst:n,continue:!e.abort})}}),wo=l("$ZodCheckMinLength",(n,e)=>{var s;I.init(n,e),(s=n._zod.def).when??(s.when=o=>{const t=o.value;return!Pn(t)&&t.length!==void 0}),n._zod.onattach.push(o=>{const t=o._zod.bag.minimum??Number.NEGATIVE_INFINITY;e.minimum>t&&(o._zod.bag.minimum=e.minimum)}),n._zod.check=o=>{const t=o.value;if(t.length>=e.minimum)return;const r=Sn(t);o.issues.push({origin:r,code:"too_small",minimum:e.minimum,inclusive:!0,input:t,inst:n,continue:!e.abort})}}),ko=l("$ZodCheckLengthEquals",(n,e)=>{var s;I.init(n,e),(s=n._zod.def).when??(s.when=o=>{const t=o.value;return!Pn(t)&&t.length!==void 0}),n._zod.onattach.push(o=>{const t=o._zod.bag;t.minimum=e.length,t.maximum=e.length,t.length=e.length}),n._zod.check=o=>{const t=o.value,a=t.length;if(a===e.length)return;const r=Sn(t),c=a>e.length;o.issues.push({origin:r,...c?{code:"too_big",maximum:e.length}:{code:"too_small",minimum:e.length},inclusive:!0,exact:!0,input:o.value,inst:n,continue:!e.abort})}}),pn=l("$ZodCheckStringFormat",(n,e)=>{var s,o;I.init(n,e),n._zod.onattach.push(t=>{const a=t._zod.bag;a.format=e.format,e.pattern&&(a.patterns??(a.patterns=new Set),a.patterns.add(e.pattern))}),e.pattern?(s=n._zod).check??(s.check=t=>{e.pattern.lastIndex=0,!e.pattern.test(t.value)&&t.issues.push({origin:"string",code:"invalid_format",format:e.format,input:t.value,...e.pattern?{pattern:e.pattern.toString()}:{},inst:n,continue:!e.abort})}):(o=n._zod).check??(o.check=()=>{})}),Bo=l("$ZodCheckRegex",(n,e)=>{pn.init(n,e),n._zod.check=s=>{e.pattern.lastIndex=0,!e.pattern.test(s.value)&&s.issues.push({origin:"string",code:"invalid_format",format:"regex",input:s.value,pattern:e.pattern.toString(),inst:n,continue:!e.abort})}}),zo=l("$ZodCheckLowerCase",(n,e)=>{e.pattern??(e.pattern=vo),pn.init(n,e)}),Eo=l("$ZodCheckUpperCase",(n,e)=>{e.pattern??(e.pattern=Do),pn.init(n,e)}),Zo=l("$ZodCheckIncludes",(n,e)=>{I.init(n,e);const s=rn(e.includes),o=new RegExp(typeof e.position=="number"?`^.{${e.position}}${s}`:s);e.pattern=o,n._zod.onattach.push(t=>{const a=t._zod.bag;a.patterns??(a.patterns=new Set),a.patterns.add(o)}),n._zod.check=t=>{t.value.includes(e.includes,e.position)||t.issues.push({origin:"string",code:"invalid_format",format:"includes",includes:e.includes,input:t.value,inst:n,continue:!e.abort})}}),Io=l("$ZodCheckStartsWith",(n,e)=>{I.init(n,e);const s=new RegExp(`^${rn(e.prefix)}.*`);e.pattern??(e.pattern=s),n._zod.onattach.push(o=>{const t=o._zod.bag;t.patterns??(t.patterns=new Set),t.patterns.add(s)}),n._zod.check=o=>{o.value.startsWith(e.prefix)||o.issues.push({origin:"string",code:"invalid_format",format:"starts_with",prefix:e.prefix,input:o.value,inst:n,continue:!e.abort})}}),xo=l("$ZodCheckEndsWith",(n,e)=>{I.init(n,e);const s=new RegExp(`.*${rn(e.suffix)}$`);e.pattern??(e.pattern=s),n._zod.onattach.push(o=>{const t=o._zod.bag;t.patterns??(t.patterns=new Set),t.patterns.add(s)}),n._zod.check=o=>{o.value.endsWith(e.suffix)||o.issues.push({origin:"string",code:"invalid_format",format:"ends_with",suffix:e.suffix,input:o.value,inst:n,continue:!e.abort})}}),Po=l("$ZodCheckOverwrite",(n,e)=>{I.init(n,e),n._zod.check=s=>{s.value=e.tx(s.value)}});class To{constructor(e=[]){this.content=[],this.indent=0,this&&(this.args=e)}indented(e){this.indent+=1,e(this),this.indent-=1}write(e){if(typeof e=="function"){e(this,{execution:"sync"}),e(this,{execution:"async"});return}const o=e.split(`
`).filter(r=>r),t=Math.min(...o.map(r=>r.length-r.trimStart().length)),a=o.map(r=>r.slice(t)).map(r=>" ".repeat(this.indent*2)+r);for(const r of a)this.content.push(r)}compile(){const e=Function,s=this==null?void 0:this.args,t=[...((this==null?void 0:this.content)??[""]).map(a=>`  ${a}`)];return new e(...s,t.join(`
`))}}const So={major:4,minor:1,patch:5},B=l("$ZodType",(n,e)=>{var t;var s;n??(n={}),n._zod.def=e,n._zod.bag=n._zod.bag||{},n._zod.version=So;const o=[...n._zod.def.checks??[]];n._zod.traits.has("$ZodCheck")&&o.unshift(n);for(const a of o)for(const r of a._zod.onattach)r(n);if(o.length===0)(s=n._zod).deferred??(s.deferred=[]),(t=n._zod.deferred)==null||t.push(()=>{n._zod.run=n._zod.parse});else{const a=(c,p,i)=>{let h=M(c),C;for(const E of p){if(E._zod.def.when){if(!E._zod.def.when(c))continue}else if(h)continue;const v=c.issues.length,Z=E._zod.check(c);if(Z instanceof Promise&&(i==null?void 0:i.async)===!1)throw new W;if(C||Z instanceof Promise)C=(C??Promise.resolve()).then(async()=>{await Z,c.issues.length!==v&&(h||(h=M(c,v)))});else{if(c.issues.length===v)continue;h||(h=M(c,v))}}return C?C.then(()=>c):c},r=(c,p,i)=>{if(M(c))return c.aborted=!0,c;const h=a(p,o,i);if(h instanceof Promise){if(i.async===!1)throw new W;return h.then(C=>n._zod.parse(C,i))}return n._zod.parse(h,i)};n._zod.run=(c,p)=>{if(p.skipChecks)return n._zod.parse(c,p);if(p.direction==="backward"){const h=n._zod.parse({value:c.value,issues:[]},{...p,skipChecks:!0});return h instanceof Promise?h.then(C=>r(C,c,p)):r(h,c,p)}const i=n._zod.parse(c,p);if(i instanceof Promise){if(p.async===!1)throw new W;return i.then(h=>a(h,o,p))}return a(i,o,p)}}n["~standard"]={validate:a=>{var r;try{const c=js(n,a);return c.success?{value:c.data}:{issues:(r=c.error)==null?void 0:r.issues}}catch{return Rs(n,a).then(p=>{var i;return p.success?{value:p.data}:{issues:(i=p.error)==null?void 0:i.issues}})}},vendor:"zod",version:1}}),jn=l("$ZodString",(n,e)=>{var s;B.init(n,e),n._zod.pattern=[...((s=n==null?void 0:n._zod.bag)==null?void 0:s.patterns)??[]].pop()??Ao(n._zod.bag),n._zod.parse=(o,t)=>{if(e.coerce)try{o.value=String(o.value)}catch{}return typeof o.value=="string"||o.issues.push({expected:"string",code:"invalid_type",input:o.value,inst:n}),o}}),b=l("$ZodStringFormat",(n,e)=>{pn.init(n,e),jn.init(n,e)}),Oo=l("$ZodGUID",(n,e)=>{e.pattern??(e.pattern=so),b.init(n,e)}),No=l("$ZodUUID",(n,e)=>{if(e.version){const o={v1:1,v2:2,v3:3,v4:4,v5:5,v6:6,v7:7,v8:8}[e.version];if(o===void 0)throw new Error(`Invalid UUID version: "${e.version}"`);e.pattern??(e.pattern=ae(o))}else e.pattern??(e.pattern=ae());b.init(n,e)}),jo=l("$ZodEmail",(n,e)=>{e.pattern??(e.pattern=oo),b.init(n,e)}),Ro=l("$ZodURL",(n,e)=>{b.init(n,e),n._zod.check=s=>{try{const o=s.value.trim(),t=new URL(o);e.hostname&&(e.hostname.lastIndex=0,e.hostname.test(t.hostname)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid hostname",pattern:uo.source,input:s.value,inst:n,continue:!e.abort})),e.protocol&&(e.protocol.lastIndex=0,e.protocol.test(t.protocol.endsWith(":")?t.protocol.slice(0,-1):t.protocol)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid protocol",pattern:e.protocol.source,input:s.value,inst:n,continue:!e.abort})),e.normalize?s.value=t.href:s.value=o;return}catch{s.issues.push({code:"invalid_format",format:"url",input:s.value,inst:n,continue:!e.abort})}}}),Go=l("$ZodEmoji",(n,e)=>{e.pattern??(e.pattern=ao()),b.init(n,e)}),Uo=l("$ZodNanoID",(n,e)=>{e.pattern??(e.pattern=no),b.init(n,e)}),Lo=l("$ZodCUID",(n,e)=>{e.pattern??(e.pattern=Ys),b.init(n,e)}),Mo=l("$ZodCUID2",(n,e)=>{e.pattern??(e.pattern=qs),b.init(n,e)}),Wo=l("$ZodULID",(n,e)=>{e.pattern??(e.pattern=Xs),b.init(n,e)}),Vo=l("$ZodXID",(n,e)=>{e.pattern??(e.pattern=Hs),b.init(n,e)}),Jo=l("$ZodKSUID",(n,e)=>{e.pattern??(e.pattern=Qs),b.init(n,e)}),Ko=l("$ZodISODateTime",(n,e)=>{e.pattern??(e.pattern=Fo(e)),b.init(n,e)}),Yo=l("$ZodISODate",(n,e)=>{e.pattern??(e.pattern=fo),b.init(n,e)}),qo=l("$ZodISOTime",(n,e)=>{e.pattern??(e.pattern=ho(e)),b.init(n,e)}),Xo=l("$ZodISODuration",(n,e)=>{e.pattern??(e.pattern=eo),b.init(n,e)}),Ho=l("$ZodIPv4",(n,e)=>{e.pattern??(e.pattern=ro),b.init(n,e),n._zod.onattach.push(s=>{const o=s._zod.bag;o.format="ipv4"})}),Qo=l("$ZodIPv6",(n,e)=>{e.pattern??(e.pattern=lo),b.init(n,e),n._zod.onattach.push(s=>{const o=s._zod.bag;o.format="ipv6"}),n._zod.check=s=>{try{new URL(`http://[${s.value}]`)}catch{s.issues.push({code:"invalid_format",format:"ipv6",input:s.value,inst:n,continue:!e.abort})}}}),nt=l("$ZodCIDRv4",(n,e)=>{e.pattern??(e.pattern=co),b.init(n,e)}),et=l("$ZodCIDRv6",(n,e)=>{e.pattern??(e.pattern=po),b.init(n,e),n._zod.check=s=>{const[o,t]=s.value.split("/");try{if(!t)throw new Error;const a=Number(t);if(`${a}`!==t)throw new Error;if(a<0||a>128)throw new Error;new URL(`http://[${o}]`)}catch{s.issues.push({code:"invalid_format",format:"cidrv6",input:s.value,inst:n,continue:!e.abort})}}});function Re(n){if(n==="")return!0;if(n.length%4!==0)return!1;try{return atob(n),!0}catch{return!1}}const st=l("$ZodBase64",(n,e)=>{e.pattern??(e.pattern=io),b.init(n,e),n._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64"}),n._zod.check=s=>{Re(s.value)||s.issues.push({code:"invalid_format",format:"base64",input:s.value,inst:n,continue:!e.abort})}});function ot(n){if(!Pe.test(n))return!1;const e=n.replace(/[-_]/g,o=>o==="-"?"+":"/"),s=e.padEnd(Math.ceil(e.length/4)*4,"=");return Re(s)}const tt=l("$ZodBase64URL",(n,e)=>{e.pattern??(e.pattern=Pe),b.init(n,e),n._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64url"}),n._zod.check=s=>{ot(s.value)||s.issues.push({code:"invalid_format",format:"base64url",input:s.value,inst:n,continue:!e.abort})}}),at=l("$ZodE164",(n,e)=>{e.pattern??(e.pattern=yo),b.init(n,e)});function rt(n,e=null){try{const s=n.split(".");if(s.length!==3)return!1;const[o]=s;if(!o)return!1;const t=JSON.parse(atob(o));return!("typ"in t&&(t==null?void 0:t.typ)!=="JWT"||!t.alg||e&&(!("alg"in t)||t.alg!==e))}catch{return!1}}const lt=l("$ZodJWT",(n,e)=>{b.init(n,e),n._zod.check=s=>{rt(s.value,e.alg)||s.issues.push({code:"invalid_format",format:"jwt",input:s.value,inst:n,continue:!e.abort})}}),Ge=l("$ZodNumber",(n,e)=>{B.init(n,e),n._zod.pattern=n._zod.bag.pattern??go,n._zod.parse=(s,o)=>{if(e.coerce)try{s.value=Number(s.value)}catch{}const t=s.value;if(typeof t=="number"&&!Number.isNaN(t)&&Number.isFinite(t))return s;const a=typeof t=="number"?Number.isNaN(t)?"NaN":Number.isFinite(t)?void 0:"Infinity":void 0;return s.issues.push({expected:"number",code:"invalid_type",input:t,inst:n,...a?{received:a}:{}}),s}}),ct=l("$ZodNumber",(n,e)=>{bo.init(n,e),Ge.init(n,e)}),pt=l("$ZodBoolean",(n,e)=>{B.init(n,e),n._zod.pattern=_o,n._zod.parse=(s,o)=>{if(e.coerce)try{s.value=!!s.value}catch{}const t=s.value;return typeof t=="boolean"||s.issues.push({expected:"boolean",code:"invalid_type",input:t,inst:n}),s}}),it=l("$ZodUnknown",(n,e)=>{B.init(n,e),n._zod.parse=s=>s}),ut=l("$ZodNever",(n,e)=>{B.init(n,e),n._zod.parse=(s,o)=>(s.issues.push({expected:"never",code:"invalid_type",input:s.value,inst:n}),s)});function re(n,e,s){n.issues.length&&e.issues.push(...Ee(s,n.issues)),e.value[s]=n.value}const dt=l("$ZodArray",(n,e)=>{B.init(n,e),n._zod.parse=(s,o)=>{const t=s.value;if(!Array.isArray(t))return s.issues.push({expected:"array",code:"invalid_type",input:t,inst:n}),s;s.value=Array(t.length);const a=[];for(let r=0;r<t.length;r++){const c=t[r],p=e.element._zod.run({value:c,issues:[]},o);p instanceof Promise?a.push(p.then(i=>re(i,s,r))):re(p,s,r)}return a.length?Promise.all(a).then(()=>s):s}});function tn(n,e,s,o){n.issues.length&&e.issues.push(...Ee(s,n.issues)),n.value===void 0?s in o&&(e.value[s]=void 0):e.value[s]=n.value}function Ue(n){const e=Object.keys(n.shape);for(const o of e)if(!n.shape[o]._zod.traits.has("$ZodType"))throw new Error(`Invalid element at key "${o}": expected a Zod schema`);const s=Bs(n.shape);return{...n,keys:e,keySet:new Set(e),numKeys:e.length,optionalKeys:new Set(s)}}function Le(n,e,s,o,t,a){const r=[],c=t.keySet,p=t.catchall._zod,i=p.def.type;for(const h of Object.keys(e)){if(c.has(h))continue;if(i==="never"){r.push(h);continue}const C=p.run({value:e[h],issues:[]},o);C instanceof Promise?n.push(C.then(E=>tn(E,s,h,e))):tn(C,s,h,e)}return r.length&&s.issues.push({code:"unrecognized_keys",keys:r,input:e,inst:a}),n.length?Promise.all(n).then(()=>s):s}const yt=l("$ZodObject",(n,e)=>{B.init(n,e);const s=xn(()=>Ue(e));D(n._zod,"propValues",()=>{const r=e.shape,c={};for(const p in r){const i=r[p]._zod;if(i.values){c[p]??(c[p]=new Set);for(const h of i.values)c[p].add(h)}}return c});const o=on,t=e.catchall;let a;n._zod.parse=(r,c)=>{a??(a=s.value);const p=r.value;if(!o(p))return r.issues.push({expected:"object",code:"invalid_type",input:p,inst:n}),r;r.value={};const i=[],h=a.shape;for(const C of a.keys){const v=h[C]._zod.run({value:p[C],issues:[]},c);v instanceof Promise?i.push(v.then(Z=>tn(Z,r,C,p))):tn(v,r,C,p)}return t?Le(i,p,r,c,s.value,n):i.length?Promise.all(i).then(()=>r):r}}),ft=l("$ZodObjectJIT",(n,e)=>{yt.init(n,e);const s=n._zod.parse,o=xn(()=>Ue(e)),t=E=>{const v=new To(["shape","payload","ctx"]),Z=o.value,N=T=>{const x=te(T);return`shape[${x}]._zod.run({ value: input[${x}], issues: [] }, ctx)`};v.write("const input = payload.value;");const J=Object.create(null);let un=0;for(const T of Z.keys)J[T]=`key_${un++}`;v.write("const newResult = {}");for(const T of Z.keys){const x=J[T],j=te(T);v.write(`const ${x} = ${N(T)};`),v.write(`
        if (${x}.issues.length) {
          payload.issues = payload.issues.concat(${x}.issues.map(iss => ({
            ...iss,
            path: iss.path ? [${j}, ...iss.path] : [${j}]
          })));
        }
        
        if (${x}.value === undefined) {
          if (${j} in input) {
            newResult[${j}] = undefined;
          }
        } else {
          newResult[${j}] = ${x}.value;
        }
      `)}v.write("payload.value = newResult;"),v.write("return payload;");const K=v.compile();return(T,x)=>K(E,T,x)};let a;const r=on,c=!ke.jitless,i=c&&ws.value,h=e.catchall;let C;n._zod.parse=(E,v)=>{C??(C=o.value);const Z=E.value;return r(Z)?c&&i&&(v==null?void 0:v.async)===!1&&v.jitless!==!0?(a||(a=t(e.shape)),E=a(E,v),h?Le([],Z,E,v,C,n):E):s(E,v):(E.issues.push({expected:"object",code:"invalid_type",input:Z,inst:n}),E)}});function le(n,e,s,o){for(const a of n)if(a.issues.length===0)return e.value=a.value,e;const t=n.filter(a=>!M(a));return t.length===1?(e.value=t[0].value,t[0]):(e.issues.push({code:"invalid_union",input:e.value,inst:s,errors:n.map(a=>a.issues.map(r=>L(r,o,U())))}),e)}const ht=l("$ZodUnion",(n,e)=>{B.init(n,e),D(n._zod,"optin",()=>e.options.some(t=>t._zod.optin==="optional")?"optional":void 0),D(n._zod,"optout",()=>e.options.some(t=>t._zod.optout==="optional")?"optional":void 0),D(n._zod,"values",()=>{if(e.options.every(t=>t._zod.values))return new Set(e.options.flatMap(t=>Array.from(t._zod.values)))}),D(n._zod,"pattern",()=>{if(e.options.every(t=>t._zod.pattern)){const t=e.options.map(a=>a._zod.pattern);return new RegExp(`^(${t.map(a=>Tn(a.source)).join("|")})$`)}});const s=e.options.length===1,o=e.options[0]._zod.run;n._zod.parse=(t,a)=>{if(s)return o(t,a);let r=!1;const c=[];for(const p of e.options){const i=p._zod.run({value:t.value,issues:[]},a);if(i instanceof Promise)c.push(i),r=!0;else{if(i.issues.length===0)return i;c.push(i)}}return r?Promise.all(c).then(p=>le(p,t,n,a)):le(c,t,n,a)}}),Ft=l("$ZodIntersection",(n,e)=>{B.init(n,e),n._zod.parse=(s,o)=>{const t=s.value,a=e.left._zod.run({value:t,issues:[]},o),r=e.right._zod.run({value:t,issues:[]},o);return a instanceof Promise||r instanceof Promise?Promise.all([a,r]).then(([p,i])=>ce(s,p,i)):ce(s,a,r)}});function zn(n,e){if(n===e)return{valid:!0,data:n};if(n instanceof Date&&e instanceof Date&&+n==+e)return{valid:!0,data:n};if(Y(n)&&Y(e)){const s=Object.keys(e),o=Object.keys(n).filter(a=>s.indexOf(a)!==-1),t={...n,...e};for(const a of o){const r=zn(n[a],e[a]);if(!r.valid)return{valid:!1,mergeErrorPath:[a,...r.mergeErrorPath]};t[a]=r.data}return{valid:!0,data:t}}if(Array.isArray(n)&&Array.isArray(e)){if(n.length!==e.length)return{valid:!1,mergeErrorPath:[]};const s=[];for(let o=0;o<n.length;o++){const t=n[o],a=e[o],r=zn(t,a);if(!r.valid)return{valid:!1,mergeErrorPath:[o,...r.mergeErrorPath]};s.push(r.data)}return{valid:!0,data:s}}return{valid:!1,mergeErrorPath:[]}}function ce(n,e,s){if(e.issues.length&&n.issues.push(...e.issues),s.issues.length&&n.issues.push(...s.issues),M(n))return n;const o=zn(e.value,s.value);if(!o.valid)throw new Error(`Unmergable intersection. Error path: ${JSON.stringify(o.mergeErrorPath)}`);return n.value=o.data,n}const At=l("$ZodEnum",(n,e)=>{B.init(n,e);const s=Cs(e.entries),o=new Set(s);n._zod.values=o,n._zod.pattern=new RegExp(`^(${s.filter(t=>ks.has(typeof t)).map(t=>typeof t=="string"?rn(t):t.toString()).join("|")})$`),n._zod.parse=(t,a)=>{const r=t.value;return o.has(r)||t.issues.push({code:"invalid_value",values:s,input:r,inst:n}),t}}),mt=l("$ZodTransform",(n,e)=>{B.init(n,e),n._zod.parse=(s,o)=>{if(o.direction==="backward")throw new we(n.constructor.name);const t=e.transform(s.value,s);if(o.async)return(t instanceof Promise?t:Promise.resolve(t)).then(r=>(s.value=r,s));if(t instanceof Promise)throw new W;return s.value=t,s}});function pe(n,e){return n.issues.length&&e===void 0?{issues:[],value:void 0}:n}const gt=l("$ZodOptional",(n,e)=>{B.init(n,e),n._zod.optin="optional",n._zod.optout="optional",D(n._zod,"values",()=>e.innerType._zod.values?new Set([...e.innerType._zod.values,void 0]):void 0),D(n._zod,"pattern",()=>{const s=e.innerType._zod.pattern;return s?new RegExp(`^(${Tn(s.source)})?$`):void 0}),n._zod.parse=(s,o)=>{if(e.innerType._zod.optin==="optional"){const t=e.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>pe(a,s.value)):pe(t,s.value)}return s.value===void 0?s:e.innerType._zod.run(s,o)}}),_t=l("$ZodNullable",(n,e)=>{B.init(n,e),D(n._zod,"optin",()=>e.innerType._zod.optin),D(n._zod,"optout",()=>e.innerType._zod.optout),D(n._zod,"pattern",()=>{const s=e.innerType._zod.pattern;return s?new RegExp(`^(${Tn(s.source)}|null)$`):void 0}),D(n._zod,"values",()=>e.innerType._zod.values?new Set([...e.innerType._zod.values,null]):void 0),n._zod.parse=(s,o)=>s.value===null?s:e.innerType._zod.run(s,o)}),vt=l("$ZodDefault",(n,e)=>{B.init(n,e),n._zod.optin="optional",D(n._zod,"values",()=>e.innerType._zod.values),n._zod.parse=(s,o)=>{if(o.direction==="backward")return e.innerType._zod.run(s,o);if(s.value===void 0)return s.value=e.defaultValue,s;const t=e.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>ie(a,e)):ie(t,e)}});function ie(n,e){return n.value===void 0&&(n.value=e.defaultValue),n}const Dt=l("$ZodPrefault",(n,e)=>{B.init(n,e),n._zod.optin="optional",D(n._zod,"values",()=>e.innerType._zod.values),n._zod.parse=(s,o)=>(o.direction==="backward"||s.value===void 0&&(s.value=e.defaultValue),e.innerType._zod.run(s,o))}),Ct=l("$ZodNonOptional",(n,e)=>{B.init(n,e),D(n._zod,"values",()=>{const s=e.innerType._zod.values;return s?new Set([...s].filter(o=>o!==void 0)):void 0}),n._zod.parse=(s,o)=>{const t=e.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>ue(a,n)):ue(t,n)}});function ue(n,e){return!n.issues.length&&n.value===void 0&&n.issues.push({code:"invalid_type",expected:"nonoptional",input:n.value,inst:e}),n}const bt=l("$ZodCatch",(n,e)=>{B.init(n,e),D(n._zod,"optin",()=>e.innerType._zod.optin),D(n._zod,"optout",()=>e.innerType._zod.optout),D(n._zod,"values",()=>e.innerType._zod.values),n._zod.parse=(s,o)=>{if(o.direction==="backward")return e.innerType._zod.run(s,o);const t=e.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>(s.value=a.value,a.issues.length&&(s.value=e.catchValue({...s,error:{issues:a.issues.map(r=>L(r,o,U()))},input:s.value}),s.issues=[]),s)):(s.value=t.value,t.issues.length&&(s.value=e.catchValue({...s,error:{issues:t.issues.map(a=>L(a,o,U()))},input:s.value}),s.issues=[]),s)}}),$t=l("$ZodPipe",(n,e)=>{B.init(n,e),D(n._zod,"values",()=>e.in._zod.values),D(n._zod,"optin",()=>e.in._zod.optin),D(n._zod,"optout",()=>e.out._zod.optout),D(n._zod,"propValues",()=>e.in._zod.propValues),n._zod.parse=(s,o)=>{if(o.direction==="backward"){const a=e.out._zod.run(s,o);return a instanceof Promise?a.then(r=>Q(r,e.in,o)):Q(a,e.in,o)}const t=e.in._zod.run(s,o);return t instanceof Promise?t.then(a=>Q(a,e.out,o)):Q(t,e.out,o)}});function Q(n,e,s){return n.issues.length?(n.aborted=!0,n):e._zod.run({value:n.value,issues:n.issues},s)}const wt=l("$ZodReadonly",(n,e)=>{B.init(n,e),D(n._zod,"propValues",()=>e.innerType._zod.propValues),D(n._zod,"values",()=>e.innerType._zod.values),D(n._zod,"optin",()=>e.innerType._zod.optin),D(n._zod,"optout",()=>e.innerType._zod.optout),n._zod.parse=(s,o)=>{if(o.direction==="backward")return e.innerType._zod.run(s,o);const t=e.innerType._zod.run(s,o);return t instanceof Promise?t.then(de):de(t)}});function de(n){return n.value=Object.freeze(n.value),n}const kt=l("$ZodCustom",(n,e)=>{I.init(n,e),B.init(n,e),n._zod.parse=(s,o)=>s,n._zod.check=s=>{const o=s.value,t=e.fn(o);if(t instanceof Promise)return t.then(a=>ye(a,s,o,n));ye(t,s,o,n)}});function ye(n,e,s,o){if(!n){const t={code:"custom",input:s,inst:o,path:[...o._zod.def.path??[]],continue:!o._zod.def.abort};o._zod.def.params&&(t.params=o._zod.def.params),e.issues.push(q(t))}}class Bt{constructor(){this._map=new Map,this._idmap=new Map}add(e,...s){const o=s[0];if(this._map.set(e,o),o&&typeof o=="object"&&"id"in o){if(this._idmap.has(o.id))throw new Error(`ID ${o.id} already exists in the registry`);this._idmap.set(o.id,e)}return this}clear(){return this._map=new Map,this._idmap=new Map,this}remove(e){const s=this._map.get(e);return s&&typeof s=="object"&&"id"in s&&this._idmap.delete(s.id),this._map.delete(e),this}get(e){const s=e._zod.parent;if(s){const o={...this.get(s)??{}};delete o.id;const t={...o,...this._map.get(e)};return Object.keys(t).length?t:void 0}return this._map.get(e)}has(e){return this._map.has(e)}}function zt(){return new Bt}const nn=zt();function Et(n,e){return new n({type:"string",...y(e)})}function Zt(n,e){return new n({type:"string",format:"email",check:"string_format",abort:!1,...y(e)})}function fe(n,e){return new n({type:"string",format:"guid",check:"string_format",abort:!1,...y(e)})}function It(n,e){return new n({type:"string",format:"uuid",check:"string_format",abort:!1,...y(e)})}function xt(n,e){return new n({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v4",...y(e)})}function Pt(n,e){return new n({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v6",...y(e)})}function Tt(n,e){return new n({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v7",...y(e)})}function St(n,e){return new n({type:"string",format:"url",check:"string_format",abort:!1,...y(e)})}function Ot(n,e){return new n({type:"string",format:"emoji",check:"string_format",abort:!1,...y(e)})}function Nt(n,e){return new n({type:"string",format:"nanoid",check:"string_format",abort:!1,...y(e)})}function jt(n,e){return new n({type:"string",format:"cuid",check:"string_format",abort:!1,...y(e)})}function Rt(n,e){return new n({type:"string",format:"cuid2",check:"string_format",abort:!1,...y(e)})}function Gt(n,e){return new n({type:"string",format:"ulid",check:"string_format",abort:!1,...y(e)})}function Ut(n,e){return new n({type:"string",format:"xid",check:"string_format",abort:!1,...y(e)})}function Lt(n,e){return new n({type:"string",format:"ksuid",check:"string_format",abort:!1,...y(e)})}function Mt(n,e){return new n({type:"string",format:"ipv4",check:"string_format",abort:!1,...y(e)})}function Wt(n,e){return new n({type:"string",format:"ipv6",check:"string_format",abort:!1,...y(e)})}function Vt(n,e){return new n({type:"string",format:"cidrv4",check:"string_format",abort:!1,...y(e)})}function Jt(n,e){return new n({type:"string",format:"cidrv6",check:"string_format",abort:!1,...y(e)})}function Kt(n,e){return new n({type:"string",format:"base64",check:"string_format",abort:!1,...y(e)})}function Yt(n,e){return new n({type:"string",format:"base64url",check:"string_format",abort:!1,...y(e)})}function qt(n,e){return new n({type:"string",format:"e164",check:"string_format",abort:!1,...y(e)})}function Xt(n,e){return new n({type:"string",format:"jwt",check:"string_format",abort:!1,...y(e)})}function Ht(n,e){return new n({type:"string",format:"datetime",check:"string_format",offset:!1,local:!1,precision:null,...y(e)})}function Qt(n,e){return new n({type:"string",format:"date",check:"string_format",...y(e)})}function na(n,e){return new n({type:"string",format:"time",check:"string_format",precision:null,...y(e)})}function ea(n,e){return new n({type:"string",format:"duration",check:"string_format",...y(e)})}function sa(n,e){return new n({type:"number",checks:[],...y(e)})}function oa(n,e){return new n({type:"number",check:"number_format",abort:!1,format:"safeint",...y(e)})}function ta(n,e){return new n({type:"boolean",...y(e)})}function aa(n){return new n({type:"unknown"})}function ra(n,e){return new n({type:"never",...y(e)})}function he(n,e){return new Ne({check:"less_than",...y(e),value:n,inclusive:!1})}function wn(n,e){return new Ne({check:"less_than",...y(e),value:n,inclusive:!0})}function Fe(n,e){return new je({check:"greater_than",...y(e),value:n,inclusive:!1})}function kn(n,e){return new je({check:"greater_than",...y(e),value:n,inclusive:!0})}function Ae(n,e){return new Co({check:"multiple_of",...y(e),value:n})}function Me(n,e){return new $o({check:"max_length",...y(e),maximum:n})}function an(n,e){return new wo({check:"min_length",...y(e),minimum:n})}function We(n,e){return new ko({check:"length_equals",...y(e),length:n})}function la(n,e){return new Bo({check:"string_format",format:"regex",...y(e),pattern:n})}function ca(n){return new zo({check:"string_format",format:"lowercase",...y(n)})}function pa(n){return new Eo({check:"string_format",format:"uppercase",...y(n)})}function ia(n,e){return new Zo({check:"string_format",format:"includes",...y(e),includes:n})}function ua(n,e){return new Io({check:"string_format",format:"starts_with",...y(e),prefix:n})}function da(n,e){return new xo({check:"string_format",format:"ends_with",...y(e),suffix:n})}function X(n){return new Po({check:"overwrite",tx:n})}function ya(n){return X(e=>e.normalize(n))}function fa(){return X(n=>n.trim())}function ha(){return X(n=>n.toLowerCase())}function Fa(){return X(n=>n.toUpperCase())}function Aa(n,e,s){return new n({type:"array",element:e,...y(s)})}function ma(n,e,s){return new n({type:"custom",check:"custom",fn:e,...y(s)})}function ga(n){const e=_a(s=>(s.addIssue=o=>{if(typeof o=="string")s.issues.push(q(o,s.value,e._zod.def));else{const t=o;t.fatal&&(t.continue=!1),t.code??(t.code="custom"),t.input??(t.input=s.value),t.inst??(t.inst=e),t.continue??(t.continue=!e._zod.def.abort),s.issues.push(q(t))}},n(s.value,s)));return e}function _a(n,e){const s=new I({check:"custom",...y(e)});return s._zod.check=n,s}const va=l("ZodISODateTime",(n,e)=>{Ko.init(n,e),k.init(n,e)});function Da(n){return Ht(va,n)}const Ca=l("ZodISODate",(n,e)=>{Yo.init(n,e),k.init(n,e)});function ba(n){return Qt(Ca,n)}const $a=l("ZodISOTime",(n,e)=>{qo.init(n,e),k.init(n,e)});function wa(n){return na($a,n)}const ka=l("ZodISODuration",(n,e)=>{Xo.init(n,e),k.init(n,e)});function Ba(n){return ea(ka,n)}const za=(n,e)=>{Ie.init(n,e),n.name="ZodError",Object.defineProperties(n,{format:{value:s=>Ns(n,s)},flatten:{value:s=>Os(n,s)},addIssue:{value:s=>{n.issues.push(s),n.message=JSON.stringify(n.issues,Bn,2)}},addIssues:{value:s=>{n.issues.push(...s),n.message=JSON.stringify(n.issues,Bn,2)}},isEmpty:{get(){return n.issues.length===0}}})},P=l("ZodError",za,{Parent:Error}),Ea=On(P),Za=Nn(P),Ia=ln(P),xa=cn(P),Pa=Gs(P),Ta=Us(P),Sa=Ls(P),Oa=Ms(P),Na=Ws(P),ja=Vs(P),Ra=Js(P),Ga=Ks(P),z=l("ZodType",(n,e)=>(B.init(n,e),n.def=e,n.type=e.type,Object.defineProperty(n,"_def",{value:e}),n.check=(...s)=>n.clone({...e,checks:[...e.checks??[],...s.map(o=>typeof o=="function"?{_zod:{check:o,def:{check:"custom"},onattach:[]}}:o)]}),n.clone=(s,o)=>G(n,s,o),n.brand=()=>n,n.register=((s,o)=>(s.add(n,o),n)),n.parse=(s,o)=>Ea(n,s,o,{callee:n.parse}),n.safeParse=(s,o)=>Ia(n,s,o),n.parseAsync=async(s,o)=>Za(n,s,o,{callee:n.parseAsync}),n.safeParseAsync=async(s,o)=>xa(n,s,o),n.spa=n.safeParseAsync,n.encode=(s,o)=>Pa(n,s,o),n.decode=(s,o)=>Ta(n,s,o),n.encodeAsync=async(s,o)=>Sa(n,s,o),n.decodeAsync=async(s,o)=>Oa(n,s,o),n.safeEncode=(s,o)=>Na(n,s,o),n.safeDecode=(s,o)=>ja(n,s,o),n.safeEncodeAsync=async(s,o)=>Ra(n,s,o),n.safeDecodeAsync=async(s,o)=>Ga(n,s,o),n.refine=(s,o)=>n.check(Pr(s,o)),n.superRefine=s=>n.check(Tr(s)),n.overwrite=s=>n.check(X(s)),n.optional=()=>De(n),n.nullable=()=>Ce(n),n.nullish=()=>De(Ce(n)),n.nonoptional=s=>kr(n,s),n.array=()=>sn(n),n.or=s=>Fr([n,s]),n.and=s=>mr(n,s),n.transform=s=>be(n,vr(s)),n.default=s=>br(n,s),n.prefault=s=>wr(n,s),n.catch=s=>zr(n,s),n.pipe=s=>be(n,s),n.readonly=()=>Ir(n),n.describe=s=>{const o=n.clone();return nn.add(o,{description:s}),o},Object.defineProperty(n,"description",{get(){var s;return(s=nn.get(n))==null?void 0:s.description},configurable:!0}),n.meta=(...s)=>{if(s.length===0)return nn.get(n);const o=n.clone();return nn.add(o,s[0]),o},n.isOptional=()=>n.safeParse(void 0).success,n.isNullable=()=>n.safeParse(null).success,n)),Ve=l("_ZodString",(n,e)=>{jn.init(n,e),z.init(n,e);const s=n._zod.bag;n.format=s.format??null,n.minLength=s.minimum??null,n.maxLength=s.maximum??null,n.regex=(...o)=>n.check(la(...o)),n.includes=(...o)=>n.check(ia(...o)),n.startsWith=(...o)=>n.check(ua(...o)),n.endsWith=(...o)=>n.check(da(...o)),n.min=(...o)=>n.check(an(...o)),n.max=(...o)=>n.check(Me(...o)),n.length=(...o)=>n.check(We(...o)),n.nonempty=(...o)=>n.check(an(1,...o)),n.lowercase=o=>n.check(ca(o)),n.uppercase=o=>n.check(pa(o)),n.trim=()=>n.check(fa()),n.normalize=(...o)=>n.check(ya(...o)),n.toLowerCase=()=>n.check(ha()),n.toUpperCase=()=>n.check(Fa())}),Ua=l("ZodString",(n,e)=>{jn.init(n,e),Ve.init(n,e),n.email=s=>n.check(Zt(La,s)),n.url=s=>n.check(St(Ma,s)),n.jwt=s=>n.check(Xt(ar,s)),n.emoji=s=>n.check(Ot(Wa,s)),n.guid=s=>n.check(fe(me,s)),n.uuid=s=>n.check(It(en,s)),n.uuidv4=s=>n.check(xt(en,s)),n.uuidv6=s=>n.check(Pt(en,s)),n.uuidv7=s=>n.check(Tt(en,s)),n.nanoid=s=>n.check(Nt(Va,s)),n.guid=s=>n.check(fe(me,s)),n.cuid=s=>n.check(jt(Ja,s)),n.cuid2=s=>n.check(Rt(Ka,s)),n.ulid=s=>n.check(Gt(Ya,s)),n.base64=s=>n.check(Kt(sr,s)),n.base64url=s=>n.check(Yt(or,s)),n.xid=s=>n.check(Ut(qa,s)),n.ksuid=s=>n.check(Lt(Xa,s)),n.ipv4=s=>n.check(Mt(Ha,s)),n.ipv6=s=>n.check(Wt(Qa,s)),n.cidrv4=s=>n.check(Vt(nr,s)),n.cidrv6=s=>n.check(Jt(er,s)),n.e164=s=>n.check(qt(tr,s)),n.datetime=s=>n.check(Da(s)),n.date=s=>n.check(ba(s)),n.time=s=>n.check(wa(s)),n.duration=s=>n.check(Ba(s))});function S(n){return Et(Ua,n)}const k=l("ZodStringFormat",(n,e)=>{b.init(n,e),Ve.init(n,e)}),La=l("ZodEmail",(n,e)=>{jo.init(n,e),k.init(n,e)}),me=l("ZodGUID",(n,e)=>{Oo.init(n,e),k.init(n,e)}),en=l("ZodUUID",(n,e)=>{No.init(n,e),k.init(n,e)}),Ma=l("ZodURL",(n,e)=>{Ro.init(n,e),k.init(n,e)}),Wa=l("ZodEmoji",(n,e)=>{Go.init(n,e),k.init(n,e)}),Va=l("ZodNanoID",(n,e)=>{Uo.init(n,e),k.init(n,e)}),Ja=l("ZodCUID",(n,e)=>{Lo.init(n,e),k.init(n,e)}),Ka=l("ZodCUID2",(n,e)=>{Mo.init(n,e),k.init(n,e)}),Ya=l("ZodULID",(n,e)=>{Wo.init(n,e),k.init(n,e)}),qa=l("ZodXID",(n,e)=>{Vo.init(n,e),k.init(n,e)}),Xa=l("ZodKSUID",(n,e)=>{Jo.init(n,e),k.init(n,e)}),Ha=l("ZodIPv4",(n,e)=>{Ho.init(n,e),k.init(n,e)}),Qa=l("ZodIPv6",(n,e)=>{Qo.init(n,e),k.init(n,e)}),nr=l("ZodCIDRv4",(n,e)=>{nt.init(n,e),k.init(n,e)}),er=l("ZodCIDRv6",(n,e)=>{et.init(n,e),k.init(n,e)}),sr=l("ZodBase64",(n,e)=>{st.init(n,e),k.init(n,e)}),or=l("ZodBase64URL",(n,e)=>{tt.init(n,e),k.init(n,e)}),tr=l("ZodE164",(n,e)=>{at.init(n,e),k.init(n,e)}),ar=l("ZodJWT",(n,e)=>{lt.init(n,e),k.init(n,e)}),Je=l("ZodNumber",(n,e)=>{Ge.init(n,e),z.init(n,e),n.gt=(o,t)=>n.check(Fe(o,t)),n.gte=(o,t)=>n.check(kn(o,t)),n.min=(o,t)=>n.check(kn(o,t)),n.lt=(o,t)=>n.check(he(o,t)),n.lte=(o,t)=>n.check(wn(o,t)),n.max=(o,t)=>n.check(wn(o,t)),n.int=o=>n.check(ge(o)),n.safe=o=>n.check(ge(o)),n.positive=o=>n.check(Fe(0,o)),n.nonnegative=o=>n.check(kn(0,o)),n.negative=o=>n.check(he(0,o)),n.nonpositive=o=>n.check(wn(0,o)),n.multipleOf=(o,t)=>n.check(Ae(o,t)),n.step=(o,t)=>n.check(Ae(o,t)),n.finite=()=>n;const s=n._zod.bag;n.minValue=Math.max(s.minimum??Number.NEGATIVE_INFINITY,s.exclusiveMinimum??Number.NEGATIVE_INFINITY)??null,n.maxValue=Math.min(s.maximum??Number.POSITIVE_INFINITY,s.exclusiveMaximum??Number.POSITIVE_INFINITY)??null,n.isInt=(s.format??"").includes("int")||Number.isSafeInteger(s.multipleOf??.5),n.isFinite=!0,n.format=s.format??null});function rr(n){return sa(Je,n)}const lr=l("ZodNumberFormat",(n,e)=>{ct.init(n,e),Je.init(n,e)});function ge(n){return oa(lr,n)}const cr=l("ZodBoolean",(n,e)=>{pt.init(n,e),z.init(n,e)});function pr(n){return ta(cr,n)}const ir=l("ZodUnknown",(n,e)=>{it.init(n,e),z.init(n,e)});function _e(){return aa(ir)}const ur=l("ZodNever",(n,e)=>{ut.init(n,e),z.init(n,e)});function dr(n){return ra(ur,n)}const yr=l("ZodArray",(n,e)=>{dt.init(n,e),z.init(n,e),n.element=e.element,n.min=(s,o)=>n.check(an(s,o)),n.nonempty=s=>n.check(an(1,s)),n.max=(s,o)=>n.check(Me(s,o)),n.length=(s,o)=>n.check(We(s,o)),n.unwrap=()=>n.element});function sn(n,e){return Aa(yr,n,e)}const fr=l("ZodObject",(n,e)=>{ft.init(n,e),z.init(n,e),D(n,"shape",()=>e.shape),n.keyof=()=>gr(Object.keys(n._zod.def.shape)),n.catchall=s=>n.clone({...n._zod.def,catchall:s}),n.passthrough=()=>n.clone({...n._zod.def,catchall:_e()}),n.loose=()=>n.clone({...n._zod.def,catchall:_e()}),n.strict=()=>n.clone({...n._zod.def,catchall:dr()}),n.strip=()=>n.clone({...n._zod.def,catchall:void 0}),n.extend=s=>Is(n,s),n.safeExtend=s=>xs(n,s),n.merge=s=>Ps(n,s),n.pick=s=>Es(n,s),n.omit=s=>Zs(n,s),n.partial=(...s)=>Ts(Ke,n,s[0]),n.required=(...s)=>Ss(Ye,n,s[0])});function ve(n,e){const s={type:"object",get shape(){return R(this,"shape",n?$s(n):{}),this.shape},...y(e)};return new fr(s)}const hr=l("ZodUnion",(n,e)=>{ht.init(n,e),z.init(n,e),n.options=e.options});function Fr(n,e){return new hr({type:"union",options:n,...y(e)})}const Ar=l("ZodIntersection",(n,e)=>{Ft.init(n,e),z.init(n,e)});function mr(n,e){return new Ar({type:"intersection",left:n,right:e})}const En=l("ZodEnum",(n,e)=>{At.init(n,e),z.init(n,e),n.enum=e.entries,n.options=Object.values(e.entries);const s=new Set(Object.keys(e.entries));n.extract=(o,t)=>{const a={};for(const r of o)if(s.has(r))a[r]=e.entries[r];else throw new Error(`Key ${r} not found in enum`);return new En({...e,checks:[],...y(t),entries:a})},n.exclude=(o,t)=>{const a={...e.entries};for(const r of o)if(s.has(r))delete a[r];else throw new Error(`Key ${r} not found in enum`);return new En({...e,checks:[],...y(t),entries:a})}});function gr(n,e){const s=Array.isArray(n)?Object.fromEntries(n.map(o=>[o,o])):n;return new En({type:"enum",entries:s,...y(e)})}const _r=l("ZodTransform",(n,e)=>{mt.init(n,e),z.init(n,e),n._zod.parse=(s,o)=>{if(o.direction==="backward")throw new we(n.constructor.name);s.addIssue=a=>{if(typeof a=="string")s.issues.push(q(a,s.value,e));else{const r=a;r.fatal&&(r.continue=!1),r.code??(r.code="custom"),r.input??(r.input=s.value),r.inst??(r.inst=n),s.issues.push(q(r))}};const t=e.transform(s.value,s);return t instanceof Promise?t.then(a=>(s.value=a,s)):(s.value=t,s)}});function vr(n){return new _r({type:"transform",transform:n})}const Ke=l("ZodOptional",(n,e)=>{gt.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType});function De(n){return new Ke({type:"optional",innerType:n})}const Dr=l("ZodNullable",(n,e)=>{_t.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType});function Ce(n){return new Dr({type:"nullable",innerType:n})}const Cr=l("ZodDefault",(n,e)=>{vt.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType,n.removeDefault=n.unwrap});function br(n,e){return new Cr({type:"default",innerType:n,get defaultValue(){return typeof e=="function"?e():ze(e)}})}const $r=l("ZodPrefault",(n,e)=>{Dt.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType});function wr(n,e){return new $r({type:"prefault",innerType:n,get defaultValue(){return typeof e=="function"?e():ze(e)}})}const Ye=l("ZodNonOptional",(n,e)=>{Ct.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType});function kr(n,e){return new Ye({type:"nonoptional",innerType:n,...y(e)})}const Br=l("ZodCatch",(n,e)=>{bt.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType,n.removeCatch=n.unwrap});function zr(n,e){return new Br({type:"catch",innerType:n,catchValue:typeof e=="function"?e:()=>e})}const Er=l("ZodPipe",(n,e)=>{$t.init(n,e),z.init(n,e),n.in=e.in,n.out=e.out});function be(n,e){return new Er({type:"pipe",in:n,out:e})}const Zr=l("ZodReadonly",(n,e)=>{wt.init(n,e),z.init(n,e),n.unwrap=()=>n._zod.def.innerType});function Ir(n){return new Zr({type:"readonly",innerType:n})}const xr=l("ZodCustom",(n,e)=>{kt.init(n,e),z.init(n,e)});function Pr(n,e={}){return ma(xr,n,e)}function Tr(n){return ga(n)}const qe=ve({title:S(),description:S(),slug:S(),authors:sn(S()),reviewers:sn(S()),date:S(),updated:S().optional(),tags:sn(S()),readTime:rr(),image:ve({src:S(),alt:S()}).optional(),published:pr()}),Zn=Object.assign({"../articles/introduction-to-go.md":Ds});function Qr(){return Object.entries(Zn).map(([n,e])=>{if(!e.metadata)throw new Error(`No metadata found in ${n}`);return qe.parse(e.metadata)}).filter(n=>n.published).sort((n,e)=>+new Date(e.date)-+new Date(n.date))}function nl(n){const e=`../articles/${n}.svx`,s=`../articles/${n}.md`,o=Zn[e]??Zn[s];if(!o)return null;const t=qe.parse(o.metadata);return t.published?{Content:o.default,metadata:t}:null}export{nl as a,Qr as g};
