import"./Bzak7iHL.js";import{L as m}from"./CD3B4HDh.js";import{p as ds,aR as ys,q as $n,ah as fs,r as A,v as hs,o as Fs,y as f,w as $,z as F,x as g,A as w}from"./D01uuYru.js";import{h as O}from"./DkS15D3Q.js";import{l as As,s as ms}from"./DwibsWFW.js";function gs(e,n){ds(n,!0);const s=!0;var o=ys(),t=$n(o);return fs(t,()=>n.children),A(e,o),hs({prerender:s})}const Ee={title:"Introduction to Go",description:"A concise intro to Go, covering its design, syntax, concurrency model, standard library, and ecosystem.",slug:"introduction-to-go",authors:["Lucas McClean"],reviewers:["Lucas Velasco"],date:"2025-10-15T00:00:00.000Z",updated:"2025-10-15T00:00:00.000Z",tags:["go","golang","beginner","programming","concurrency"],readTime:12,image:{src:"",alt:""},published:!0,layout:"article"},{title:Gr,description:Ur,slug:Lr,authors:Mr,reviewers:Wr,date:Vr,updated:Jr,tags:Kr,readTime:Yr,image:qr,published:Xr,layout:Hr}=Ee;var _s=Fs(`<p>This article is merely meant as a brief introduction that I hope will encourage
you to further research Go and its principles. It is far from exhaustive but
does capture the core ideas of Go and some of the features that I find most
interesting. I will cover Go’s: <!>, <!>, <!>, <!>, <!>, and approach to <!>. At the end of each section I also add
resources that I found useful when I was learning Go.</p> <p><em>The only expectation is that you are familiar with programming basics – though
if you have less experience, I think you will still find most of the article
digestible.</em></p> <p><em>Note: examples target Go 1.25</em></p> <h2 id="gos-design">Go’s Design<!></h2> <p>Go is a programming language built around the core principles of <strong>simplicity</strong>, <strong>efficiency</strong>, and <strong>concurrency</strong>. Many programming languages prioritize
expressiveness or control. But Go often makes sacrifices in these areas in
exchange for clarity and predictable performance.</p> <p>In my experience, simplicity is the greatest indicator of an effective and
maintainable code base. The simpler a project is – both architecturally and
line-by-line – the easier it is for developers to work with it effectively. Go’s
design encourages code that is more readable and maintainable, almost by
default.</p> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-syntax">Go’s Syntax<!></h2> <p>If you’re familiar with general programming concepts, then Go shouldn’t be too
difficult to pick up. Its syntax is relatively basic, with just a few key
differences from other C-like languages.</p> <!> <p>The main <em>syntactic</em> differences from other languages:</p> <ul><li>No semicolons at the ends of lines</li> <li>Types <em>after</em> identifiers in declarations (<code>x int</code>)</li> <li>Export via capitalization, rather than a keyword</li> <li>No parentheses are present around conditions</li></ul> <p>Go doesn’t have classes or inheritance. Instead, it uses <strong>structs</strong> for
grouping data and <strong>methods</strong> (i.e. functions that operate on types) for
behaviour.</p> <p>Go’s methods look different from methods in many other mainstream languages.
They are defined outside the struct and use a receiver to specify which type
they operate on.</p> <!> <p>Go automatically handles pointer/value method calls; so you can call both <code>ex.PrintName()</code> and <code>ex.MakeCool()</code> the same way, and Go will handle the
reference conversion for you.</p> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-error-handling">Go’s Error Handling<!></h2> <p>I’ve made this its own section, as I often find a language’s approach to error
handling to be highly indicative of its general principles. Go’s approach is
‘errors as values.’</p> <!> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-ecosystem">Go’s Ecosystem<!></h2> <p>The pillars that Go is built on also affect the package system and community. Go
developers tend to avoid dependencies if possible and prefer straightforward
designs. There’s a preference for ‘obvious’ designs, and composition as opposed
to inheritance.</p> <p>In most Go codebases, you’ll find:</p> <ul><li>Shallow directory structures</li> <li>Minimal abstraction</li> <li>Composition over inheritance</li> <li>A preference for plain interfaces and simple tooling</li></ul> <p>To start a new Go project:</p> <!> <p>To add a dependency:</p> <!> <p>To clean up unused or redundant dependencies:</p> <!> <p>And finally, to run your project:</p> <!> <p><code>go.mod</code> defines the module path and your direct dependencies and the hashes of
those dependencies are stored in <code>go.sum</code>.</p> <p>Some other tools you may see:</p> <ul><li><code>gofmt</code> / <code>go fmt</code>: formatting (Go culture strongly relies on auto-formatting)</li> <li><code>go vet</code> and <code>staticcheck</code>: static analysis</li> <li><code>go test</code>: testing</li> <li><code>go install pkg@version</code>: install a binary from a module</li></ul> <p><em>Resources</em>: <!>, <!></p> <h2 id="gos-concurrency-model">Go’s Concurrency Model<!></h2> <p>In Go, concurrency is first class: it’s built right into the syntax of the
language. The primary tool for concurrency in Go is the <strong>goroutine</strong>.</p> <!> <p>The other core concurrency tool is the <strong>channel</strong>. Channels are used for
communicating between goroutines, and they come with some of their own syntax.</p> <!> <p><em>Resources</em>: <!>, <!>, <!></p> <h2 id="gos-standard-library">Go’s Standard Library<!></h2> <p>Given the Go community’s general opposition to unnecessary dependencies, Go’s
standard library is quite comprehensive – particularly in the areas of I/O and
networking. It is very often not necessary to look outside the standard library.
Before adding a dependency, always check <!> and see if it provides what you
need.</p> <p>Some of the big packages:</p> <ul><li><code>net</code>: TCP, UDP, HTTP, DNS, Unix sockets, and more (including <code>net/http</code>).</li> <li><code>io</code> / <code>os</code>: file I/O, environment, <code>io.Reader</code>/<code>io.Writer</code> patterns.</li> <li><code>encoding</code>: JSON, XML, gob, base64, etc.</li> <li><code>crypto</code>: common cryptographic tools.</li> <li><code>testing</code>: unit tests, benchmarks, and examples.</li></ul> <p>Long story short: if you need it, Go often has a solid foundation in the
standard library.</p> <h2 id="further-resources">Further Resources<!></h2> <p>There’s still a lot I didn’t cover, and much left to explore. But I hope that
what I <em>did</em> show impressed you enough to continue looking into it. Go is one of
my favourite programming languages; I find the trade-offs it makes appealing,
and I love how simple it is to pick up.</p> <p><strong><!></strong> is a hands-on tour of the syntax and
standard library of Go. It walks you through all of its critical components with
a built-in editor.</p> <p><strong><!></strong> provides idioms for common
patterns. This was probably the resource I found <strong>most useful</strong> in my journey
learning more advanced Go.</p> <p><strong><!></strong> is the standard library
documentation.</p> <p><strong><!></strong> covers particular topics. Some topics I
didn’t mention or only briefly mentioned, such as generics, channels,
concurrency, and advanced error handling, are also worth exploring on the Go
Blog.</p> <p>If you have any questions or enjoyed the article, feel free to reach out! You
can find me on <!>.</p>`,1);function vs(e,n){const s=As(n,["children","$$slots","$$events","$$legacy"]);gs(e,ms(()=>s,()=>Ee,{children:(o,t)=>{var a=_s(),r=$n(a),c=f($(r));m(c,{href:"#gos-design",children:(u,_)=>{F();var d=g("Design");A(u,d)},$$slots:{default:!0}});var p=f(c,2);m(p,{href:"#gos-syntax",children:(u,_)=>{F();var d=g("Syntax");A(u,d)},$$slots:{default:!0}});var i=f(p,2);m(i,{href:"#gos-ecosystem",children:(u,_)=>{F();var d=g("Ecosystem");A(u,d)},$$slots:{default:!0}});var h=f(i,2);m(h,{href:"#gos-standard-library",children:(u,_)=>{F();var d=g("Standard Library");A(u,d)},$$slots:{default:!0}});var C=f(h,2);m(C,{href:"#gos-concurrency-model",children:(u,_)=>{F();var d=g("Concurrency Model");A(u,d)},$$slots:{default:!0}});var Z=f(C,2);m(Z,{href:"#gos-error-handling",children:(u,_)=>{F();var d=g("Error Handling");A(u,d)},$$slots:{default:!0}}),F(),w(r);var v=f(r,6),E=f($(v));m(E,{"aria-label":"Link to this section",href:"#gos-design",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(v);var N=f(v,6),J=f($(N),2);m(J,{href:"https://go-proverbs.github.io/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Proverbs");A(u,d)},$$slots:{default:!0}});var ie=f(J,2);m(ie,{href:"https://go.dev/doc/effective_go",rel:"nofollow",children:(u,_)=>{F();var d=g("Effective Go");A(u,d)},$$slots:{default:!0}}),w(N);var K=f(N,2),T=f($(K));m(T,{"aria-label":"Link to this section",href:"#gos-syntax",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(K);var x=f(K,4);O(x,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// In Go, types come *after* the variable or function name</span></span>
<span class="line"><span style="color:#BB9AF7">var</span><span style="color:#C0CAF5"> test</span><span style="color:#BB9AF7"> int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Capitalized identifiers (functions, variables, types, etc.)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// are *exported* (visible outside of the package)</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> y</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5">)</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">    return</span><span style="color:#C0CAF5"> x</span><span style="color:#89DDFF"> +</span><span style="color:#C0CAF5"> y</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // \`range\` can be used to iterate (only as of Go 1.22+)</span></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 5</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // Using formatted output</span></span>
<span class="line"><span style="color:#C0CAF5">        fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF"> "</span><span style="color:#89DDFF">,</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> -</span><span style="color:#FF9E64"> 1</span><span style="color:#9ABDF5">))</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Traditional loop syntax also works:</span></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> 0</span><span style="color:#89DDFF">;</span><span style="color:#C0CAF5"> i</span><span style="color:#BB9AF7"> &#x3C;</span><span style="color:#FF9E64"> 5</span><span style="color:#89DDFF">;</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF">++</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">        fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF"> "</span><span style="color:#89DDFF">,</span><span style="color:#7AA2F7"> Sum</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> -</span><span style="color:#FF9E64"> 1</span><span style="color:#9ABDF5">))</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Explicit type declaration</span></span>
<span class="line"><span style="color:#BB9AF7">    var</span><span style="color:#C0CAF5"> a</span><span style="color:#BB9AF7"> bool</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> true</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Short variable declaration which infers the type</span></span>
<span class="line"><span style="color:#C0CAF5">    b</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // No parentheses around conditions</span></span>
<span class="line"><span style="color:#BB9AF7">    if</span><span style="color:#C0CAF5"> a</span><span style="color:#BB9AF7"> ||</span><span style="color:#C0CAF5"> b</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">        fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">a or b</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">    x</span><span style="color:#89DDFF"> :=</span><span style="color:#FF9E64"> 0</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Infinite loop</span></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">        if</span><span style="color:#C0CAF5"> x</span><span style="color:#BB9AF7"> ></span><span style="color:#FF9E64"> 10</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">            break</span></span>
<span class="line"><span style="color:#9ABDF5">        }</span></span>
<span class="line"><span style="color:#C0CAF5">        x</span><span style="color:#89DDFF">++</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var j=f(x,10);O(j,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">type</span><span style="color:#C0CAF5"> Example</span><span style="color:#BB9AF7"> struct</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#7DCFFF">    name</span><span style="color:#BB9AF7"> string</span><span style="color:#CCAAAA;font-style:italic">         // unexported (private)</span></span>
<span class="line"><span style="color:#7DCFFF">    isCool</span><span style="color:#BB9AF7"> bool</span></span>
<span class="line"><span style="color:#7DCFFF">    FavoriteNumber</span><span style="color:#BB9AF7"> int</span><span style="color:#CCAAAA;font-style:italic">  // exported (public)</span></span>
<span class="line"><span style="color:#7DCFFF">    SomeArray</span><span style="color:#9ABDF5"> []</span><span style="color:#BB9AF7">int</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Method with value receiver which receives a *copy* of</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// \`Example\`</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> PrintName</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // unexported \`name\` still available inside the method</span></span>
<span class="line"><span style="color:#C0CAF5">    fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">name</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">    fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%d</span><span style="color:#C0CAF5"> %t</span><span style="color:#89DDFF">
"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">FavoriteNumber</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">isCool</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Method with pointer receiver which allows modification of</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// the original</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e </span><span style="color:#89DDFF">*</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">)</span><span style="color:#7AA2F7"> MakeCool</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">    e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">FavoriteNumber</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> 42</span></span>
<span class="line"><span style="color:#C0CAF5">    e</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">isCool</span><span style="color:#89DDFF"> =</span><span style="color:#FF9E64"> true</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Go doesn't require constructors, but a common convention</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// is to use \`NewType\`</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> NewExample</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">name</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">    return</span><span style="color:#89DDFF"> &#x26;</span><span style="color:#C0CAF5">Example</span><span style="color:#9ABDF5">{</span></span>
<span class="line"><span style="color:#7DCFFF">        name</span><span style="color:#89DDFF">:</span><span style="color:#C0CAF5">       name</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#7DCFFF">        isCool</span><span style="color:#89DDFF">:</span><span style="color:#FF9E64">     false</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#7DCFFF">        FavoriteNumber</span><span style="color:#89DDFF">:</span><span style="color:#FF9E64"> 67</span><span style="color:#89DDFF">,</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // Because \`SomeArray\` is omitted, it will default</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // to \`nil\`</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// The main function runs when a package is executed</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">    ex</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> NewExample</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Wyatt</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">    ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintName</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: Wyatt</span></span>
<span class="line"><span style="color:#C0CAF5">    ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: 67 false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">    ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">MakeCool</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Modify through pointer receiver</span></span>
<span class="line"><span style="color:#C0CAF5">    ex</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">PrintInfo</span><span style="color:#9ABDF5">()</span><span style="color:#CCAAAA;font-style:italic"> // Outputs: 42 true</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var ue=f(j,4),je=f($(ue),2);m(je,{href:"https://go.dev/tour/welcome/1",rel:"nofollow",children:(u,_)=>{F();var d=g("Tour of Go");A(u,d)},$$slots:{default:!0}});var Xn=f(je,2);m(Xn,{href:"https://gobyexample.com/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go by Example");A(u,d)},$$slots:{default:!0}}),w(ue);var de=f(ue,2),Hn=f($(de));m(Hn,{"aria-label":"Link to this section",href:"#gos-error-handling",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(de);var Re=f(de,4);O(Re,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">errors</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">// Go supports multiple return values</span></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> canFail</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> (</span><span style="color:#BB9AF7">int</span><span style="color:#89DDFF">,</span><span style="color:#BB9AF7"> error</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">    if</span><span style="color:#C0CAF5"> x</span><span style="color:#BB9AF7"> &#x3C;=</span><span style="color:#FF9E64"> 5</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">        return</span><span style="color:#FF9E64"> 0</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> errors</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">New</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">x should be greater than 5</span><span style="color:#89DDFF">"</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span><span style="color:#BB9AF7"> else</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">        return</span><span style="color:#C0CAF5"> x</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> nil</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">    value</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> err</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> canFail</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">4</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">    if</span><span style="color:#C0CAF5"> err</span><span style="color:#BB9AF7"> !=</span><span style="color:#FF9E64"> nil</span><span style="color:#9ABDF5"> {</span><span style="color:#CCAAAA;font-style:italic"> // You'll see this check quite often in Go code</span></span>
<span class="line"><span style="color:#C0CAF5">        fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Uh oh: </span><span style="color:#C0CAF5">%v</span><span style="color:#89DDFF">
"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> err</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">        return</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"><span style="color:#C0CAF5">    fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Success: </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> was big enough!</span><span style="color:#89DDFF">
"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> value</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var ye=f(Re,2),Ge=f($(ye),2);m(Ge,{href:"https://go.dev/blog/go1.13-errors",rel:"nofollow",children:(u,_)=>{F();var d=g("Working with Errors");A(u,d)},$$slots:{default:!0}});var Qn=f(Ge,2);m(Qn,{href:"https://go.dev/blog/error-handling-and-go",rel:"nofollow",children:(u,_)=>{F();var d=g("Error Handling in Go");A(u,d)},$$slots:{default:!0}}),w(ye);var fe=f(ye,2),es=f($(fe));m(es,{"aria-label":"Link to this section",href:"#gos-ecosystem",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(fe);var Ue=f(fe,10);O(Ue,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#CCAAAA;font-style:italic"># First, install Go from https://go.dev/doc/install</span></span>
<span class="line"><span style="color:#C0CAF5">mkdir</span><span style="color:#9ECE6A"> my-project</span></span>
<span class="line"><span style="color:#0DB9D7">cd</span><span style="color:#9ECE6A"> my-project</span></span>
<span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> mod</span><span style="color:#9ECE6A"> init</span><span style="color:#9ECE6A"> github.com/your-username/my-project</span></span></code></pre>`);var Le=f(Ue,4);O(Le,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> get</span><span style="color:#9ECE6A"> github.com/dependency-owner/dependency-name@latest</span></span></code></pre>');var Me=f(Le,4);O(Me,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> mod</span><span style="color:#9ECE6A"> tidy</span></span></code></pre>');var We=f(Me,4);O(We,()=>'<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">go</span><span style="color:#9ECE6A"> run</span><span style="color:#9ECE6A"> .</span></span></code></pre>');var he=f(We,8),Ve=f($(he),2);m(Ve,{href:"https://awesome-go.com/",rel:"nofollow",children:(u,_)=>{F();var d=g("Awesome Go");A(u,d)},$$slots:{default:!0}});var ns=f(Ve,2);m(ns,{href:"https://go.dev/ref/mod",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Modules Reference");A(u,d)},$$slots:{default:!0}}),w(he);var Fe=f(he,2),ss=f($(Fe));m(ss,{"aria-label":"Link to this section",href:"#gos-concurrency-model",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(Fe);var Je=f(Fe,4);O(Je,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">sync</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> DoSomething</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">x</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> wg</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5">sync</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">WaitGroup</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // \`defer\` performs the action at the end of the function</span></span>
<span class="line"><span style="color:#BB9AF7">    defer</span><span style="color:#C0CAF5"> wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Done</span><span style="color:#9ABDF5">()</span></span>
<span class="line"><span style="color:#C0CAF5">	time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sleep</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Duration</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">x</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5"> time</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">Second</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">	fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Waited for </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> seconds</span><span style="color:#89DDFF">
"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> x</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#BB9AF7">    var</span><span style="color:#C0CAF5"> wg</span><span style="color:#C0CAF5"> sync</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">WaitGroup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#C0CAF5"> i</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 4</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">        wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Add</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // Simply put \`go\` in front of a function to run it</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // as a goroutine</span></span>
<span class="line"><span style="color:#BB9AF7">        go</span><span style="color:#7AA2F7"> DoSomething</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">i</span><span style="color:#89DDFF">,</span><span style="color:#89DDFF"> &#x26;</span><span style="color:#C0CAF5">wg</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Wait for all goroutines to finish</span></span>
<span class="line"><span style="color:#C0CAF5">    wg</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Wait</span><span style="color:#9ABDF5">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Both output:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Waited for 0 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Waited for 1 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Waited for 2 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Waited for 3 seconds</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var Ke=f(Je,4);O(Ke,()=>`<pre class="shiki tokyo-night" style="background-color:#1a1b26;color:#a9b1d6" tabindex="0"><code><span class="line"><span style="color:#BB9AF7">package</span><span style="color:#C0CAF5"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#89DDFF"> (</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">fmt</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">    "</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">"</span></span>
<span class="line"><span style="color:#89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">id</span><span style="color:#BB9AF7"> string</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> delay</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#E0AF68"> ch</span><span style="color:#BB9AF7"> chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">    time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sleep</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">time</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Duration</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">delay</span><span style="color:#9ABDF5">)</span><span style="color:#89DDFF"> *</span><span style="color:#C0CAF5"> time</span><span style="color:#89DDFF">.</span><span style="color:#C0CAF5">Second</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Put this message into the provided channel</span></span>
<span class="line"><span style="color:#C0CAF5">    ch</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5"> fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Sprintf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#C0CAF5">%s</span><span style="color:#9ECE6A"> finished after </span><span style="color:#C0CAF5">%d</span><span style="color:#9ECE6A"> seconds</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> id</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> delay</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">func</span><span style="color:#7AA2F7"> main</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // \`make\` is used to create channels</span></span>
<span class="line"><span style="color:#C0CAF5">    ch1</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">    ch2</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> string</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Goroutine 1 will finish first and 2 will finish around</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // three seconds after</span></span>
<span class="line"><span style="color:#BB9AF7">    go</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Goroutine 1</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 2</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> ch1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">    go</span><span style="color:#7AA2F7"> DoWork</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Goroutine 2</span><span style="color:#89DDFF">"</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 5</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> ch2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#BB9AF7"> range</span><span style="color:#FF9E64"> 2</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // \`select\` matches on whichever channel is ready</span></span>
<span class="line"><span style="color:#BB9AF7">        select</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">        // \`&#x3C;-\` used to receive value from channel</span></span>
<span class="line"><span style="color:#BB9AF7">        case</span><span style="color:#C0CAF5"> msg1</span><span style="color:#89DDFF"> :=</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5">ch1</span><span style="color:#89DDFF">:</span></span>
<span class="line"><span style="color:#C0CAF5">            fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">msg1</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#BB9AF7">        case</span><span style="color:#C0CAF5"> msg2</span><span style="color:#89DDFF"> :=</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#C0CAF5">ch2</span><span style="color:#89DDFF">:</span></span>
<span class="line"><span style="color:#C0CAF5">            fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Println</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">msg2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">        }</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Outputs:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Goroutine 1 finished after 2 seconds</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Goroutine 2 finished after 5 seconds</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Capacity is specified as last argument to \`make\`</span></span>
<span class="line"><span style="color:#C0CAF5">    buffered</span><span style="color:#89DDFF"> :=</span><span style="color:#7AA2F7"> make</span><span style="color:#9ABDF5">(</span><span style="color:#BB9AF7">chan</span><span style="color:#BB9AF7"> int</span><span style="color:#89DDFF">,</span><span style="color:#FF9E64"> 2</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#C0CAF5">    buffered</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#FF9E64"> 10</span></span>
<span class="line"><span style="color:#C0CAF5">    buffered</span><span style="color:#89DDFF"> &#x3C;-</span><span style="color:#FF9E64"> 20</span></span>
<span class="line"><span style="color:#7AA2F7">    close</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">buffered</span><span style="color:#9ABDF5">)</span><span style="color:#CCAAAA;font-style:italic"> // closing signals no more values will be sent</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // 'range' can be used to receive values until the channel closes</span></span>
<span class="line"><span style="color:#BB9AF7">    for</span><span style="color:#C0CAF5"> val</span><span style="color:#89DDFF"> :=</span><span style="color:#BB9AF7"> range</span><span style="color:#C0CAF5"> buffered</span><span style="color:#9ABDF5"> {</span></span>
<span class="line"><span style="color:#C0CAF5">        fmt</span><span style="color:#89DDFF">.</span><span style="color:#7AA2F7">Printf</span><span style="color:#9ABDF5">(</span><span style="color:#89DDFF">"</span><span style="color:#9ECE6A">Buffered value: </span><span style="color:#C0CAF5">%d</span><span style="color:#89DDFF">
"</span><span style="color:#89DDFF">,</span><span style="color:#C0CAF5"> val</span><span style="color:#9ABDF5">)</span></span>
<span class="line"><span style="color:#9ABDF5">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Outptuts:</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Buffered value: 10</span></span>
<span class="line"><span style="color:#CCAAAA;font-style:italic">    // Buffered value: 20</span></span>
<span class="line"><span style="color:#9ABDF5">}</span></span></code></pre>`);var Ae=f(Ke,2),Ye=f($(Ae),2);m(Ye,{href:"https://go101.org/article/channel.html",rel:"nofollow",children:(u,_)=>{F();var d=g("Go 101");A(u,d)},$$slots:{default:!0}});var qe=f(Ye,2);m(qe,{href:"https://www.youtube.com/watch?v=f6kdp27TYZs",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Concurrency Patterns (video)");A(u,d)},$$slots:{default:!0}});var os=f(qe,2);m(os,{href:"https://go.dev/ref/mem",rel:"nofollow",children:(u,_)=>{F();var d=g("The Go Memory Model");A(u,d)},$$slots:{default:!0}}),w(Ae);var me=f(Ae,2),ts=f($(me));m(ts,{"aria-label":"Link to this section",href:"#gos-standard-library",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(me);var ge=f(me,2),as=f($(ge));m(as,{href:"https://pkg.go.dev/std",rel:"nofollow",children:(u,_)=>{F();var d=g("Go’s Standard Library");A(u,d)},$$slots:{default:!0}}),F(),w(ge);var _e=f(ge,8),rs=f($(_e));m(rs,{"aria-label":"Link to this section",href:"#further-resources",children:(u,_)=>{F();var d=g("  §");A(u,d)},$$slots:{default:!0}}),w(_e);var ve=f(_e,4),Xe=$(ve),ls=$(Xe);m(ls,{href:"https://go.dev/tour/",rel:"nofollow",children:(u,_)=>{F();var d=g("Tour of Go");A(u,d)},$$slots:{default:!0}}),w(Xe),F(),w(ve);var De=f(ve,2),He=$(De),cs=$(He);m(cs,{href:"https://go.dev/doc/effective_go",rel:"nofollow",children:(u,_)=>{F();var d=g("Effective Go");A(u,d)},$$slots:{default:!0}}),w(He),F(3),w(De);var Ce=f(De,2),Qe=$(Ce),ps=$(Qe);m(ps,{href:"https://pkg.go.dev/std",rel:"nofollow",children:(u,_)=>{F();var d=g("pkg.go.dev/std");A(u,d)},$$slots:{default:!0}}),w(Qe),F(),w(Ce);var be=f(Ce,2),en=$(be),is=$(en);m(is,{href:"https://go.dev/blog/",rel:"nofollow",children:(u,_)=>{F();var d=g("Go Blog");A(u,d)},$$slots:{default:!0}}),w(en),F(),w(be);var nn=f(be,2),us=f($(nn));m(us,{href:"https://www.linkedin.com/in/lucasmcclean",rel:"nofollow",children:(u,_)=>{F();var d=g("LinkedIn");A(u,d)},$$slots:{default:!0}}),F(),w(nn),A(o,a)},$$slots:{default:!0}}))}const Ds=Object.freeze(Object.defineProperty({__proto__:null,default:vs,metadata:Ee},Symbol.toStringTag,{value:"Module"}));function l(e,n,s){function o(c,p){var i;Object.defineProperty(c,"_zod",{value:c._zod??{},enumerable:!1}),(i=c._zod).traits??(i.traits=new Set),c._zod.traits.add(e),n(c,p);for(const h in r.prototype)h in c||Object.defineProperty(c,h,{value:r.prototype[h].bind(c)});c._zod.constr=r,c._zod.def=p}const t=(s==null?void 0:s.Parent)??Object;class a extends t{}Object.defineProperty(a,"name",{value:e});function r(c){var p;const i=s!=null&&s.Parent?new a:this;o(i,c),(p=i._zod).deferred??(p.deferred=[]);for(const h of i._zod.deferred)h();return i}return Object.defineProperty(r,"init",{value:o}),Object.defineProperty(r,Symbol.hasInstance,{value:c=>{var p,i;return s!=null&&s.Parent&&c instanceof s.Parent?!0:(i=(p=c==null?void 0:c._zod)==null?void 0:p.traits)==null?void 0:i.has(e)}}),Object.defineProperty(r,"name",{value:e}),r}class W extends Error{constructor(){super("Encountered Promise during synchronous parse. Use .parseAsync() instead.")}}class wn extends Error{constructor(n){super(`Encountered unidirectional transform during encode: ${n}`),this.name="ZodEncodeError"}}const kn={};function U(e){return kn}function Cs(e){const n=Object.values(e).filter(o=>typeof o=="number");return Object.entries(e).filter(([o,t])=>n.indexOf(+o)===-1).map(([o,t])=>t)}function ke(e,n){return typeof n=="bigint"?n.toString():n}function Ie(e){return{get value(){{const n=e();return Object.defineProperty(this,"value",{value:n}),n}}}}function xe(e){return e==null}function Pe(e){const n=e.startsWith("^")?1:0,s=e.endsWith("$")?e.length-1:e.length;return e.slice(n,s)}function bs(e,n){const s=(e.toString().split(".")[1]||"").length,o=n.toString();let t=(o.split(".")[1]||"").length;if(t===0&&/\d?e-\d?/.test(o)){const p=o.match(/\d?e-(\d?)/);p!=null&&p[1]&&(t=Number.parseInt(p[1]))}const a=s>t?s:t,r=Number.parseInt(e.toFixed(a).replace(".","")),c=Number.parseInt(n.toFixed(a).replace(".",""));return r%c/10**a}const sn=Symbol("evaluating");function D(e,n,s){let o;Object.defineProperty(e,n,{get(){if(o!==sn)return o===void 0&&(o=sn,o=s()),o},set(t){Object.defineProperty(e,n,{value:t})},configurable:!0})}function $s(e){return Object.create(Object.getPrototypeOf(e),Object.getOwnPropertyDescriptors(e))}function R(e,n,s){Object.defineProperty(e,n,{value:s,writable:!0,enumerable:!0,configurable:!0})}function V(...e){const n={};for(const s of e){const o=Object.getOwnPropertyDescriptors(s);Object.assign(n,o)}return Object.defineProperties({},n)}function on(e){return JSON.stringify(e)}const Bn="captureStackTrace"in Error?Error.captureStackTrace:(...e)=>{};function oe(e){return typeof e=="object"&&e!==null&&!Array.isArray(e)}const ws=Ie(()=>{var e;if(typeof navigator<"u"&&((e=navigator==null?void 0:navigator.userAgent)!=null&&e.includes("Cloudflare")))return!1;try{const n=Function;return new n(""),!0}catch{return!1}});function Y(e){if(oe(e)===!1)return!1;const n=e.constructor;if(n===void 0)return!0;const s=n.prototype;return!(oe(s)===!1||Object.prototype.hasOwnProperty.call(s,"isPrototypeOf")===!1)}function zn(e){return Y(e)?{...e}:e}const ks=new Set(["string","number","symbol"]);function re(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function G(e,n,s){const o=new e._zod.constr(n??e._zod.def);return(!n||s!=null&&s.parent)&&(o._zod.parent=e),o}function y(e){const n=e;if(!n)return{};if(typeof n=="string")return{error:()=>n};if((n==null?void 0:n.message)!==void 0){if((n==null?void 0:n.error)!==void 0)throw new Error("Cannot specify both `message` and `error` params");n.error=n.message}return delete n.message,typeof n.error=="string"?{...n,error:()=>n.error}:n}function Bs(e){return Object.keys(e).filter(n=>e[n]._zod.optin==="optional"&&e[n]._zod.optout==="optional")}const zs={safeint:[Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER],int32:[-2147483648,2147483647],uint32:[0,4294967295],float32:[-34028234663852886e22,34028234663852886e22],float64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function Zs(e,n){const s=e._zod.def,o=V(e._zod.def,{get shape(){const t={};for(const a in n){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);n[a]&&(t[a]=s.shape[a])}return R(this,"shape",t),t},checks:[]});return G(e,o)}function Es(e,n){const s=e._zod.def,o=V(e._zod.def,{get shape(){const t={...e._zod.def.shape};for(const a in n){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);n[a]&&delete t[a]}return R(this,"shape",t),t},checks:[]});return G(e,o)}function Is(e,n){if(!Y(n))throw new Error("Invalid input to extend: expected a plain object");const s=e._zod.def.checks;if(s&&s.length>0)throw new Error("Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.");const t=V(e._zod.def,{get shape(){const a={...e._zod.def.shape,...n};return R(this,"shape",a),a},checks:[]});return G(e,t)}function xs(e,n){if(!Y(n))throw new Error("Invalid input to safeExtend: expected a plain object");const s={...e._zod.def,get shape(){const o={...e._zod.def.shape,...n};return R(this,"shape",o),o},checks:e._zod.def.checks};return G(e,s)}function Ps(e,n){const s=V(e._zod.def,{get shape(){const o={...e._zod.def.shape,...n._zod.def.shape};return R(this,"shape",o),o},get catchall(){return n._zod.def.catchall},checks:[]});return G(e,s)}function Ts(e,n,s){const o=V(n._zod.def,{get shape(){const t=n._zod.def.shape,a={...t};if(s)for(const r in s){if(!(r in t))throw new Error(`Unrecognized key: "${r}"`);s[r]&&(a[r]=e?new e({type:"optional",innerType:t[r]}):t[r])}else for(const r in t)a[r]=e?new e({type:"optional",innerType:t[r]}):t[r];return R(this,"shape",a),a},checks:[]});return G(n,o)}function Ss(e,n,s){const o=V(n._zod.def,{get shape(){const t=n._zod.def.shape,a={...t};if(s)for(const r in s){if(!(r in a))throw new Error(`Unrecognized key: "${r}"`);s[r]&&(a[r]=new e({type:"nonoptional",innerType:t[r]}))}else for(const r in t)a[r]=new e({type:"nonoptional",innerType:t[r]});return R(this,"shape",a),a},checks:[]});return G(n,o)}function M(e,n=0){var s;if(e.aborted===!0)return!0;for(let o=n;o<e.issues.length;o++)if(((s=e.issues[o])==null?void 0:s.continue)!==!0)return!0;return!1}function Zn(e,n){return n.map(s=>{var o;return(o=s).path??(o.path=[]),s.path.unshift(e),s})}function H(e){return typeof e=="string"?e:e==null?void 0:e.message}function L(e,n,s){var t,a,r,c,p,i;const o={...e,path:e.path??[]};if(!e.message){const h=H((r=(a=(t=e.inst)==null?void 0:t._zod.def)==null?void 0:a.error)==null?void 0:r.call(a,e))??H((c=n==null?void 0:n.error)==null?void 0:c.call(n,e))??H((p=s.customError)==null?void 0:p.call(s,e))??H((i=s.localeError)==null?void 0:i.call(s,e))??"Invalid input";o.message=h}return delete o.inst,delete o.continue,n!=null&&n.reportInput||delete o.input,o}function Te(e){return Array.isArray(e)?"array":typeof e=="string"?"string":"unknown"}function q(...e){const[n,s,o]=e;return typeof n=="string"?{message:n,code:"custom",input:s,inst:o}:{...n}}const En=(e,n)=>{e.name="$ZodError",Object.defineProperty(e,"_zod",{value:e._zod,enumerable:!1}),Object.defineProperty(e,"issues",{value:n,enumerable:!1}),e.message=JSON.stringify(n,ke,2),Object.defineProperty(e,"toString",{value:()=>e.message,enumerable:!1})},In=l("$ZodError",En),xn=l("$ZodError",En,{Parent:Error});function Os(e,n=s=>s.message){const s={},o=[];for(const t of e.issues)t.path.length>0?(s[t.path[0]]=s[t.path[0]]||[],s[t.path[0]].push(n(t))):o.push(n(t));return{formErrors:o,fieldErrors:s}}function Ns(e,n){const s=n||function(a){return a.message},o={_errors:[]},t=a=>{for(const r of a.issues)if(r.code==="invalid_union"&&r.errors.length)r.errors.map(c=>t({issues:c}));else if(r.code==="invalid_key")t({issues:r.issues});else if(r.code==="invalid_element")t({issues:r.issues});else if(r.path.length===0)o._errors.push(s(r));else{let c=o,p=0;for(;p<r.path.length;){const i=r.path[p];p===r.path.length-1?(c[i]=c[i]||{_errors:[]},c[i]._errors.push(s(r))):c[i]=c[i]||{_errors:[]},c=c[i],p++}}};return t(e),o}const Se=e=>(n,s,o,t)=>{const a=o?Object.assign(o,{async:!1}):{async:!1},r=n._zod.run({value:s,issues:[]},a);if(r instanceof Promise)throw new W;if(r.issues.length){const c=new((t==null?void 0:t.Err)??e)(r.issues.map(p=>L(p,a,U())));throw Bn(c,t==null?void 0:t.callee),c}return r.value},Oe=e=>async(n,s,o,t)=>{const a=o?Object.assign(o,{async:!0}):{async:!0};let r=n._zod.run({value:s,issues:[]},a);if(r instanceof Promise&&(r=await r),r.issues.length){const c=new((t==null?void 0:t.Err)??e)(r.issues.map(p=>L(p,a,U())));throw Bn(c,t==null?void 0:t.callee),c}return r.value},le=e=>(n,s,o)=>{const t=o?{...o,async:!1}:{async:!1},a=n._zod.run({value:s,issues:[]},t);if(a instanceof Promise)throw new W;return a.issues.length?{success:!1,error:new(e??In)(a.issues.map(r=>L(r,t,U())))}:{success:!0,data:a.value}},js=le(xn),ce=e=>async(n,s,o)=>{const t=o?Object.assign(o,{async:!0}):{async:!0};let a=n._zod.run({value:s,issues:[]},t);return a instanceof Promise&&(a=await a),a.issues.length?{success:!1,error:new e(a.issues.map(r=>L(r,t,U())))}:{success:!0,data:a.value}},Rs=ce(xn),Gs=e=>(n,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return Se(e)(n,s,t)},Us=e=>(n,s,o)=>Se(e)(n,s,o),Ls=e=>async(n,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return Oe(e)(n,s,t)},Ms=e=>async(n,s,o)=>Oe(e)(n,s,o),Ws=e=>(n,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return le(e)(n,s,t)},Vs=e=>(n,s,o)=>le(e)(n,s,o),Js=e=>async(n,s,o)=>{const t=o?Object.assign(o,{direction:"backward"}):{direction:"backward"};return ce(e)(n,s,t)},Ks=e=>async(n,s,o)=>ce(e)(n,s,o),Ys=/^[cC][^\s-]{8,}$/,qs=/^[0-9a-z]+$/,Xs=/^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/,Hs=/^[0-9a-vA-V]{20}$/,Qs=/^[A-Za-z0-9]{27}$/,eo=/^[a-zA-Z0-9_-]{21}$/,no=/^P(?:(\d+W)|(?!.*W)(?=\d|T\d)(\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+([.,]\d+)?S)?)?)$/,so=/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/,tn=e=>e?new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${e}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`):/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/,oo=/^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$/,to="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";function ao(){return new RegExp(to,"u")}const ro=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,lo=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/,co=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/([0-9]|[1-2][0-9]|3[0-2])$/,po=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,io=/^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/,Pn=/^[A-Za-z0-9_-]*$/,uo=/^(?=.{1,253}\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\.?$/,yo=/^\+(?:[0-9]){6,14}[0-9]$/,Tn="(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))",fo=new RegExp(`^${Tn}$`);function Sn(e){const n="(?:[01]\\d|2[0-3]):[0-5]\\d";return typeof e.precision=="number"?e.precision===-1?`${n}`:e.precision===0?`${n}:[0-5]\\d`:`${n}:[0-5]\\d\\.\\d{${e.precision}}`:`${n}(?::[0-5]\\d(?:\\.\\d+)?)?`}function ho(e){return new RegExp(`^${Sn(e)}$`)}function Fo(e){const n=Sn({precision:e.precision}),s=["Z"];e.local&&s.push(""),e.offset&&s.push("([+-](?:[01]\\d|2[0-3]):[0-5]\\d)");const o=`${n}(?:${s.join("|")})`;return new RegExp(`^${Tn}T(?:${o})$`)}const Ao=e=>{const n=e?`[\\s\\S]{${(e==null?void 0:e.minimum)??0},${(e==null?void 0:e.maximum)??""}}`:"[\\s\\S]*";return new RegExp(`^${n}$`)},mo=/^\d+$/,go=/^-?\d+(?:\.\d+)?/i,_o=/true|false/i,vo=/^[^A-Z]*$/,Do=/^[^a-z]*$/,I=l("$ZodCheck",(e,n)=>{var s;e._zod??(e._zod={}),e._zod.def=n,(s=e._zod).onattach??(s.onattach=[])}),On={number:"number",bigint:"bigint",object:"date"},Nn=l("$ZodCheckLessThan",(e,n)=>{I.init(e,n);const s=On[typeof n.value];e._zod.onattach.push(o=>{const t=o._zod.bag,a=(n.inclusive?t.maximum:t.exclusiveMaximum)??Number.POSITIVE_INFINITY;n.value<a&&(n.inclusive?t.maximum=n.value:t.exclusiveMaximum=n.value)}),e._zod.check=o=>{(n.inclusive?o.value<=n.value:o.value<n.value)||o.issues.push({origin:s,code:"too_big",maximum:n.value,input:o.value,inclusive:n.inclusive,inst:e,continue:!n.abort})}}),jn=l("$ZodCheckGreaterThan",(e,n)=>{I.init(e,n);const s=On[typeof n.value];e._zod.onattach.push(o=>{const t=o._zod.bag,a=(n.inclusive?t.minimum:t.exclusiveMinimum)??Number.NEGATIVE_INFINITY;n.value>a&&(n.inclusive?t.minimum=n.value:t.exclusiveMinimum=n.value)}),e._zod.check=o=>{(n.inclusive?o.value>=n.value:o.value>n.value)||o.issues.push({origin:s,code:"too_small",minimum:n.value,input:o.value,inclusive:n.inclusive,inst:e,continue:!n.abort})}}),Co=l("$ZodCheckMultipleOf",(e,n)=>{I.init(e,n),e._zod.onattach.push(s=>{var o;(o=s._zod.bag).multipleOf??(o.multipleOf=n.value)}),e._zod.check=s=>{if(typeof s.value!=typeof n.value)throw new Error("Cannot mix number and bigint in multiple_of check.");(typeof s.value=="bigint"?s.value%n.value===BigInt(0):bs(s.value,n.value)===0)||s.issues.push({origin:typeof s.value,code:"not_multiple_of",divisor:n.value,input:s.value,inst:e,continue:!n.abort})}}),bo=l("$ZodCheckNumberFormat",(e,n)=>{var r;I.init(e,n),n.format=n.format||"float64";const s=(r=n.format)==null?void 0:r.includes("int"),o=s?"int":"number",[t,a]=zs[n.format];e._zod.onattach.push(c=>{const p=c._zod.bag;p.format=n.format,p.minimum=t,p.maximum=a,s&&(p.pattern=mo)}),e._zod.check=c=>{const p=c.value;if(s){if(!Number.isInteger(p)){c.issues.push({expected:o,format:n.format,code:"invalid_type",continue:!1,input:p,inst:e});return}if(!Number.isSafeInteger(p)){p>0?c.issues.push({input:p,code:"too_big",maximum:Number.MAX_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:e,origin:o,continue:!n.abort}):c.issues.push({input:p,code:"too_small",minimum:Number.MIN_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:e,origin:o,continue:!n.abort});return}}p<t&&c.issues.push({origin:"number",input:p,code:"too_small",minimum:t,inclusive:!0,inst:e,continue:!n.abort}),p>a&&c.issues.push({origin:"number",input:p,code:"too_big",maximum:a,inst:e})}}),$o=l("$ZodCheckMaxLength",(e,n)=>{var s;I.init(e,n),(s=e._zod.def).when??(s.when=o=>{const t=o.value;return!xe(t)&&t.length!==void 0}),e._zod.onattach.push(o=>{const t=o._zod.bag.maximum??Number.POSITIVE_INFINITY;n.maximum<t&&(o._zod.bag.maximum=n.maximum)}),e._zod.check=o=>{const t=o.value;if(t.length<=n.maximum)return;const r=Te(t);o.issues.push({origin:r,code:"too_big",maximum:n.maximum,inclusive:!0,input:t,inst:e,continue:!n.abort})}}),wo=l("$ZodCheckMinLength",(e,n)=>{var s;I.init(e,n),(s=e._zod.def).when??(s.when=o=>{const t=o.value;return!xe(t)&&t.length!==void 0}),e._zod.onattach.push(o=>{const t=o._zod.bag.minimum??Number.NEGATIVE_INFINITY;n.minimum>t&&(o._zod.bag.minimum=n.minimum)}),e._zod.check=o=>{const t=o.value;if(t.length>=n.minimum)return;const r=Te(t);o.issues.push({origin:r,code:"too_small",minimum:n.minimum,inclusive:!0,input:t,inst:e,continue:!n.abort})}}),ko=l("$ZodCheckLengthEquals",(e,n)=>{var s;I.init(e,n),(s=e._zod.def).when??(s.when=o=>{const t=o.value;return!xe(t)&&t.length!==void 0}),e._zod.onattach.push(o=>{const t=o._zod.bag;t.minimum=n.length,t.maximum=n.length,t.length=n.length}),e._zod.check=o=>{const t=o.value,a=t.length;if(a===n.length)return;const r=Te(t),c=a>n.length;o.issues.push({origin:r,...c?{code:"too_big",maximum:n.length}:{code:"too_small",minimum:n.length},inclusive:!0,exact:!0,input:o.value,inst:e,continue:!n.abort})}}),pe=l("$ZodCheckStringFormat",(e,n)=>{var s,o;I.init(e,n),e._zod.onattach.push(t=>{const a=t._zod.bag;a.format=n.format,n.pattern&&(a.patterns??(a.patterns=new Set),a.patterns.add(n.pattern))}),n.pattern?(s=e._zod).check??(s.check=t=>{n.pattern.lastIndex=0,!n.pattern.test(t.value)&&t.issues.push({origin:"string",code:"invalid_format",format:n.format,input:t.value,...n.pattern?{pattern:n.pattern.toString()}:{},inst:e,continue:!n.abort})}):(o=e._zod).check??(o.check=()=>{})}),Bo=l("$ZodCheckRegex",(e,n)=>{pe.init(e,n),e._zod.check=s=>{n.pattern.lastIndex=0,!n.pattern.test(s.value)&&s.issues.push({origin:"string",code:"invalid_format",format:"regex",input:s.value,pattern:n.pattern.toString(),inst:e,continue:!n.abort})}}),zo=l("$ZodCheckLowerCase",(e,n)=>{n.pattern??(n.pattern=vo),pe.init(e,n)}),Zo=l("$ZodCheckUpperCase",(e,n)=>{n.pattern??(n.pattern=Do),pe.init(e,n)}),Eo=l("$ZodCheckIncludes",(e,n)=>{I.init(e,n);const s=re(n.includes),o=new RegExp(typeof n.position=="number"?`^.{${n.position}}${s}`:s);n.pattern=o,e._zod.onattach.push(t=>{const a=t._zod.bag;a.patterns??(a.patterns=new Set),a.patterns.add(o)}),e._zod.check=t=>{t.value.includes(n.includes,n.position)||t.issues.push({origin:"string",code:"invalid_format",format:"includes",includes:n.includes,input:t.value,inst:e,continue:!n.abort})}}),Io=l("$ZodCheckStartsWith",(e,n)=>{I.init(e,n);const s=new RegExp(`^${re(n.prefix)}.*`);n.pattern??(n.pattern=s),e._zod.onattach.push(o=>{const t=o._zod.bag;t.patterns??(t.patterns=new Set),t.patterns.add(s)}),e._zod.check=o=>{o.value.startsWith(n.prefix)||o.issues.push({origin:"string",code:"invalid_format",format:"starts_with",prefix:n.prefix,input:o.value,inst:e,continue:!n.abort})}}),xo=l("$ZodCheckEndsWith",(e,n)=>{I.init(e,n);const s=new RegExp(`.*${re(n.suffix)}$`);n.pattern??(n.pattern=s),e._zod.onattach.push(o=>{const t=o._zod.bag;t.patterns??(t.patterns=new Set),t.patterns.add(s)}),e._zod.check=o=>{o.value.endsWith(n.suffix)||o.issues.push({origin:"string",code:"invalid_format",format:"ends_with",suffix:n.suffix,input:o.value,inst:e,continue:!n.abort})}}),Po=l("$ZodCheckOverwrite",(e,n)=>{I.init(e,n),e._zod.check=s=>{s.value=n.tx(s.value)}});class To{constructor(n=[]){this.content=[],this.indent=0,this&&(this.args=n)}indented(n){this.indent+=1,n(this),this.indent-=1}write(n){if(typeof n=="function"){n(this,{execution:"sync"}),n(this,{execution:"async"});return}const o=n.split(`
`).filter(r=>r),t=Math.min(...o.map(r=>r.length-r.trimStart().length)),a=o.map(r=>r.slice(t)).map(r=>" ".repeat(this.indent*2)+r);for(const r of a)this.content.push(r)}compile(){const n=Function,s=this==null?void 0:this.args,t=[...((this==null?void 0:this.content)??[""]).map(a=>`  ${a}`)];return new n(...s,t.join(`
`))}}const So={major:4,minor:1,patch:5},B=l("$ZodType",(e,n)=>{var t;var s;e??(e={}),e._zod.def=n,e._zod.bag=e._zod.bag||{},e._zod.version=So;const o=[...e._zod.def.checks??[]];e._zod.traits.has("$ZodCheck")&&o.unshift(e);for(const a of o)for(const r of a._zod.onattach)r(e);if(o.length===0)(s=e._zod).deferred??(s.deferred=[]),(t=e._zod.deferred)==null||t.push(()=>{e._zod.run=e._zod.parse});else{const a=(c,p,i)=>{let h=M(c),C;for(const Z of p){if(Z._zod.def.when){if(!Z._zod.def.when(c))continue}else if(h)continue;const v=c.issues.length,E=Z._zod.check(c);if(E instanceof Promise&&(i==null?void 0:i.async)===!1)throw new W;if(C||E instanceof Promise)C=(C??Promise.resolve()).then(async()=>{await E,c.issues.length!==v&&(h||(h=M(c,v)))});else{if(c.issues.length===v)continue;h||(h=M(c,v))}}return C?C.then(()=>c):c},r=(c,p,i)=>{if(M(c))return c.aborted=!0,c;const h=a(p,o,i);if(h instanceof Promise){if(i.async===!1)throw new W;return h.then(C=>e._zod.parse(C,i))}return e._zod.parse(h,i)};e._zod.run=(c,p)=>{if(p.skipChecks)return e._zod.parse(c,p);if(p.direction==="backward"){const h=e._zod.parse({value:c.value,issues:[]},{...p,skipChecks:!0});return h instanceof Promise?h.then(C=>r(C,c,p)):r(h,c,p)}const i=e._zod.parse(c,p);if(i instanceof Promise){if(p.async===!1)throw new W;return i.then(h=>a(h,o,p))}return a(i,o,p)}}e["~standard"]={validate:a=>{var r;try{const c=js(e,a);return c.success?{value:c.data}:{issues:(r=c.error)==null?void 0:r.issues}}catch{return Rs(e,a).then(p=>{var i;return p.success?{value:p.data}:{issues:(i=p.error)==null?void 0:i.issues}})}},vendor:"zod",version:1}}),Ne=l("$ZodString",(e,n)=>{var s;B.init(e,n),e._zod.pattern=[...((s=e==null?void 0:e._zod.bag)==null?void 0:s.patterns)??[]].pop()??Ao(e._zod.bag),e._zod.parse=(o,t)=>{if(n.coerce)try{o.value=String(o.value)}catch{}return typeof o.value=="string"||o.issues.push({expected:"string",code:"invalid_type",input:o.value,inst:e}),o}}),b=l("$ZodStringFormat",(e,n)=>{pe.init(e,n),Ne.init(e,n)}),Oo=l("$ZodGUID",(e,n)=>{n.pattern??(n.pattern=so),b.init(e,n)}),No=l("$ZodUUID",(e,n)=>{if(n.version){const o={v1:1,v2:2,v3:3,v4:4,v5:5,v6:6,v7:7,v8:8}[n.version];if(o===void 0)throw new Error(`Invalid UUID version: "${n.version}"`);n.pattern??(n.pattern=tn(o))}else n.pattern??(n.pattern=tn());b.init(e,n)}),jo=l("$ZodEmail",(e,n)=>{n.pattern??(n.pattern=oo),b.init(e,n)}),Ro=l("$ZodURL",(e,n)=>{b.init(e,n),e._zod.check=s=>{try{const o=s.value.trim(),t=new URL(o);n.hostname&&(n.hostname.lastIndex=0,n.hostname.test(t.hostname)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid hostname",pattern:uo.source,input:s.value,inst:e,continue:!n.abort})),n.protocol&&(n.protocol.lastIndex=0,n.protocol.test(t.protocol.endsWith(":")?t.protocol.slice(0,-1):t.protocol)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid protocol",pattern:n.protocol.source,input:s.value,inst:e,continue:!n.abort})),n.normalize?s.value=t.href:s.value=o;return}catch{s.issues.push({code:"invalid_format",format:"url",input:s.value,inst:e,continue:!n.abort})}}}),Go=l("$ZodEmoji",(e,n)=>{n.pattern??(n.pattern=ao()),b.init(e,n)}),Uo=l("$ZodNanoID",(e,n)=>{n.pattern??(n.pattern=eo),b.init(e,n)}),Lo=l("$ZodCUID",(e,n)=>{n.pattern??(n.pattern=Ys),b.init(e,n)}),Mo=l("$ZodCUID2",(e,n)=>{n.pattern??(n.pattern=qs),b.init(e,n)}),Wo=l("$ZodULID",(e,n)=>{n.pattern??(n.pattern=Xs),b.init(e,n)}),Vo=l("$ZodXID",(e,n)=>{n.pattern??(n.pattern=Hs),b.init(e,n)}),Jo=l("$ZodKSUID",(e,n)=>{n.pattern??(n.pattern=Qs),b.init(e,n)}),Ko=l("$ZodISODateTime",(e,n)=>{n.pattern??(n.pattern=Fo(n)),b.init(e,n)}),Yo=l("$ZodISODate",(e,n)=>{n.pattern??(n.pattern=fo),b.init(e,n)}),qo=l("$ZodISOTime",(e,n)=>{n.pattern??(n.pattern=ho(n)),b.init(e,n)}),Xo=l("$ZodISODuration",(e,n)=>{n.pattern??(n.pattern=no),b.init(e,n)}),Ho=l("$ZodIPv4",(e,n)=>{n.pattern??(n.pattern=ro),b.init(e,n),e._zod.onattach.push(s=>{const o=s._zod.bag;o.format="ipv4"})}),Qo=l("$ZodIPv6",(e,n)=>{n.pattern??(n.pattern=lo),b.init(e,n),e._zod.onattach.push(s=>{const o=s._zod.bag;o.format="ipv6"}),e._zod.check=s=>{try{new URL(`http://[${s.value}]`)}catch{s.issues.push({code:"invalid_format",format:"ipv6",input:s.value,inst:e,continue:!n.abort})}}}),et=l("$ZodCIDRv4",(e,n)=>{n.pattern??(n.pattern=co),b.init(e,n)}),nt=l("$ZodCIDRv6",(e,n)=>{n.pattern??(n.pattern=po),b.init(e,n),e._zod.check=s=>{const[o,t]=s.value.split("/");try{if(!t)throw new Error;const a=Number(t);if(`${a}`!==t)throw new Error;if(a<0||a>128)throw new Error;new URL(`http://[${o}]`)}catch{s.issues.push({code:"invalid_format",format:"cidrv6",input:s.value,inst:e,continue:!n.abort})}}});function Rn(e){if(e==="")return!0;if(e.length%4!==0)return!1;try{return atob(e),!0}catch{return!1}}const st=l("$ZodBase64",(e,n)=>{n.pattern??(n.pattern=io),b.init(e,n),e._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64"}),e._zod.check=s=>{Rn(s.value)||s.issues.push({code:"invalid_format",format:"base64",input:s.value,inst:e,continue:!n.abort})}});function ot(e){if(!Pn.test(e))return!1;const n=e.replace(/[-_]/g,o=>o==="-"?"+":"/"),s=n.padEnd(Math.ceil(n.length/4)*4,"=");return Rn(s)}const tt=l("$ZodBase64URL",(e,n)=>{n.pattern??(n.pattern=Pn),b.init(e,n),e._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64url"}),e._zod.check=s=>{ot(s.value)||s.issues.push({code:"invalid_format",format:"base64url",input:s.value,inst:e,continue:!n.abort})}}),at=l("$ZodE164",(e,n)=>{n.pattern??(n.pattern=yo),b.init(e,n)});function rt(e,n=null){try{const s=e.split(".");if(s.length!==3)return!1;const[o]=s;if(!o)return!1;const t=JSON.parse(atob(o));return!("typ"in t&&(t==null?void 0:t.typ)!=="JWT"||!t.alg||n&&(!("alg"in t)||t.alg!==n))}catch{return!1}}const lt=l("$ZodJWT",(e,n)=>{b.init(e,n),e._zod.check=s=>{rt(s.value,n.alg)||s.issues.push({code:"invalid_format",format:"jwt",input:s.value,inst:e,continue:!n.abort})}}),Gn=l("$ZodNumber",(e,n)=>{B.init(e,n),e._zod.pattern=e._zod.bag.pattern??go,e._zod.parse=(s,o)=>{if(n.coerce)try{s.value=Number(s.value)}catch{}const t=s.value;if(typeof t=="number"&&!Number.isNaN(t)&&Number.isFinite(t))return s;const a=typeof t=="number"?Number.isNaN(t)?"NaN":Number.isFinite(t)?void 0:"Infinity":void 0;return s.issues.push({expected:"number",code:"invalid_type",input:t,inst:e,...a?{received:a}:{}}),s}}),ct=l("$ZodNumber",(e,n)=>{bo.init(e,n),Gn.init(e,n)}),pt=l("$ZodBoolean",(e,n)=>{B.init(e,n),e._zod.pattern=_o,e._zod.parse=(s,o)=>{if(n.coerce)try{s.value=!!s.value}catch{}const t=s.value;return typeof t=="boolean"||s.issues.push({expected:"boolean",code:"invalid_type",input:t,inst:e}),s}}),it=l("$ZodUnknown",(e,n)=>{B.init(e,n),e._zod.parse=s=>s}),ut=l("$ZodNever",(e,n)=>{B.init(e,n),e._zod.parse=(s,o)=>(s.issues.push({expected:"never",code:"invalid_type",input:s.value,inst:e}),s)});function an(e,n,s){e.issues.length&&n.issues.push(...Zn(s,e.issues)),n.value[s]=e.value}const dt=l("$ZodArray",(e,n)=>{B.init(e,n),e._zod.parse=(s,o)=>{const t=s.value;if(!Array.isArray(t))return s.issues.push({expected:"array",code:"invalid_type",input:t,inst:e}),s;s.value=Array(t.length);const a=[];for(let r=0;r<t.length;r++){const c=t[r],p=n.element._zod.run({value:c,issues:[]},o);p instanceof Promise?a.push(p.then(i=>an(i,s,r))):an(p,s,r)}return a.length?Promise.all(a).then(()=>s):s}});function te(e,n,s,o){e.issues.length&&n.issues.push(...Zn(s,e.issues)),e.value===void 0?s in o&&(n.value[s]=void 0):n.value[s]=e.value}function Un(e){const n=Object.keys(e.shape);for(const o of n)if(!e.shape[o]._zod.traits.has("$ZodType"))throw new Error(`Invalid element at key "${o}": expected a Zod schema`);const s=Bs(e.shape);return{...e,keys:n,keySet:new Set(n),numKeys:n.length,optionalKeys:new Set(s)}}function Ln(e,n,s,o,t,a){const r=[],c=t.keySet,p=t.catchall._zod,i=p.def.type;for(const h of Object.keys(n)){if(c.has(h))continue;if(i==="never"){r.push(h);continue}const C=p.run({value:n[h],issues:[]},o);C instanceof Promise?e.push(C.then(Z=>te(Z,s,h,n))):te(C,s,h,n)}return r.length&&s.issues.push({code:"unrecognized_keys",keys:r,input:n,inst:a}),e.length?Promise.all(e).then(()=>s):s}const yt=l("$ZodObject",(e,n)=>{B.init(e,n);const s=Ie(()=>Un(n));D(e._zod,"propValues",()=>{const r=n.shape,c={};for(const p in r){const i=r[p]._zod;if(i.values){c[p]??(c[p]=new Set);for(const h of i.values)c[p].add(h)}}return c});const o=oe,t=n.catchall;let a;e._zod.parse=(r,c)=>{a??(a=s.value);const p=r.value;if(!o(p))return r.issues.push({expected:"object",code:"invalid_type",input:p,inst:e}),r;r.value={};const i=[],h=a.shape;for(const C of a.keys){const v=h[C]._zod.run({value:p[C],issues:[]},c);v instanceof Promise?i.push(v.then(E=>te(E,r,C,p))):te(v,r,C,p)}return t?Ln(i,p,r,c,s.value,e):i.length?Promise.all(i).then(()=>r):r}}),ft=l("$ZodObjectJIT",(e,n)=>{yt.init(e,n);const s=e._zod.parse,o=Ie(()=>Un(n)),t=Z=>{const v=new To(["shape","payload","ctx"]),E=o.value,N=T=>{const x=on(T);return`shape[${x}]._zod.run({ value: input[${x}], issues: [] }, ctx)`};v.write("const input = payload.value;");const J=Object.create(null);let ie=0;for(const T of E.keys)J[T]=`key_${ie++}`;v.write("const newResult = {}");for(const T of E.keys){const x=J[T],j=on(T);v.write(`const ${x} = ${N(T)};`),v.write(`
        if (${x}.issues.length) {
          payload.issues = payload.issues.concat(${x}.issues.map(iss => ({
            ...iss,
            path: iss.path ? [${j}, ...iss.path] : [${j}]
          })));
        }
        
        if (${x}.value === undefined) {
          if (${j} in input) {
            newResult[${j}] = undefined;
          }
        } else {
          newResult[${j}] = ${x}.value;
        }
      `)}v.write("payload.value = newResult;"),v.write("return payload;");const K=v.compile();return(T,x)=>K(Z,T,x)};let a;const r=oe,c=!kn.jitless,i=c&&ws.value,h=n.catchall;let C;e._zod.parse=(Z,v)=>{C??(C=o.value);const E=Z.value;return r(E)?c&&i&&(v==null?void 0:v.async)===!1&&v.jitless!==!0?(a||(a=t(n.shape)),Z=a(Z,v),h?Ln([],E,Z,v,C,e):Z):s(Z,v):(Z.issues.push({expected:"object",code:"invalid_type",input:E,inst:e}),Z)}});function rn(e,n,s,o){for(const a of e)if(a.issues.length===0)return n.value=a.value,n;const t=e.filter(a=>!M(a));return t.length===1?(n.value=t[0].value,t[0]):(n.issues.push({code:"invalid_union",input:n.value,inst:s,errors:e.map(a=>a.issues.map(r=>L(r,o,U())))}),n)}const ht=l("$ZodUnion",(e,n)=>{B.init(e,n),D(e._zod,"optin",()=>n.options.some(t=>t._zod.optin==="optional")?"optional":void 0),D(e._zod,"optout",()=>n.options.some(t=>t._zod.optout==="optional")?"optional":void 0),D(e._zod,"values",()=>{if(n.options.every(t=>t._zod.values))return new Set(n.options.flatMap(t=>Array.from(t._zod.values)))}),D(e._zod,"pattern",()=>{if(n.options.every(t=>t._zod.pattern)){const t=n.options.map(a=>a._zod.pattern);return new RegExp(`^(${t.map(a=>Pe(a.source)).join("|")})$`)}});const s=n.options.length===1,o=n.options[0]._zod.run;e._zod.parse=(t,a)=>{if(s)return o(t,a);let r=!1;const c=[];for(const p of n.options){const i=p._zod.run({value:t.value,issues:[]},a);if(i instanceof Promise)c.push(i),r=!0;else{if(i.issues.length===0)return i;c.push(i)}}return r?Promise.all(c).then(p=>rn(p,t,e,a)):rn(c,t,e,a)}}),Ft=l("$ZodIntersection",(e,n)=>{B.init(e,n),e._zod.parse=(s,o)=>{const t=s.value,a=n.left._zod.run({value:t,issues:[]},o),r=n.right._zod.run({value:t,issues:[]},o);return a instanceof Promise||r instanceof Promise?Promise.all([a,r]).then(([p,i])=>ln(s,p,i)):ln(s,a,r)}});function Be(e,n){if(e===n)return{valid:!0,data:e};if(e instanceof Date&&n instanceof Date&&+e==+n)return{valid:!0,data:e};if(Y(e)&&Y(n)){const s=Object.keys(n),o=Object.keys(e).filter(a=>s.indexOf(a)!==-1),t={...e,...n};for(const a of o){const r=Be(e[a],n[a]);if(!r.valid)return{valid:!1,mergeErrorPath:[a,...r.mergeErrorPath]};t[a]=r.data}return{valid:!0,data:t}}if(Array.isArray(e)&&Array.isArray(n)){if(e.length!==n.length)return{valid:!1,mergeErrorPath:[]};const s=[];for(let o=0;o<e.length;o++){const t=e[o],a=n[o],r=Be(t,a);if(!r.valid)return{valid:!1,mergeErrorPath:[o,...r.mergeErrorPath]};s.push(r.data)}return{valid:!0,data:s}}return{valid:!1,mergeErrorPath:[]}}function ln(e,n,s){if(n.issues.length&&e.issues.push(...n.issues),s.issues.length&&e.issues.push(...s.issues),M(e))return e;const o=Be(n.value,s.value);if(!o.valid)throw new Error(`Unmergable intersection. Error path: ${JSON.stringify(o.mergeErrorPath)}`);return e.value=o.data,e}const At=l("$ZodEnum",(e,n)=>{B.init(e,n);const s=Cs(n.entries),o=new Set(s);e._zod.values=o,e._zod.pattern=new RegExp(`^(${s.filter(t=>ks.has(typeof t)).map(t=>typeof t=="string"?re(t):t.toString()).join("|")})$`),e._zod.parse=(t,a)=>{const r=t.value;return o.has(r)||t.issues.push({code:"invalid_value",values:s,input:r,inst:e}),t}}),mt=l("$ZodTransform",(e,n)=>{B.init(e,n),e._zod.parse=(s,o)=>{if(o.direction==="backward")throw new wn(e.constructor.name);const t=n.transform(s.value,s);if(o.async)return(t instanceof Promise?t:Promise.resolve(t)).then(r=>(s.value=r,s));if(t instanceof Promise)throw new W;return s.value=t,s}});function cn(e,n){return e.issues.length&&n===void 0?{issues:[],value:void 0}:e}const gt=l("$ZodOptional",(e,n)=>{B.init(e,n),e._zod.optin="optional",e._zod.optout="optional",D(e._zod,"values",()=>n.innerType._zod.values?new Set([...n.innerType._zod.values,void 0]):void 0),D(e._zod,"pattern",()=>{const s=n.innerType._zod.pattern;return s?new RegExp(`^(${Pe(s.source)})?$`):void 0}),e._zod.parse=(s,o)=>{if(n.innerType._zod.optin==="optional"){const t=n.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>cn(a,s.value)):cn(t,s.value)}return s.value===void 0?s:n.innerType._zod.run(s,o)}}),_t=l("$ZodNullable",(e,n)=>{B.init(e,n),D(e._zod,"optin",()=>n.innerType._zod.optin),D(e._zod,"optout",()=>n.innerType._zod.optout),D(e._zod,"pattern",()=>{const s=n.innerType._zod.pattern;return s?new RegExp(`^(${Pe(s.source)}|null)$`):void 0}),D(e._zod,"values",()=>n.innerType._zod.values?new Set([...n.innerType._zod.values,null]):void 0),e._zod.parse=(s,o)=>s.value===null?s:n.innerType._zod.run(s,o)}),vt=l("$ZodDefault",(e,n)=>{B.init(e,n),e._zod.optin="optional",D(e._zod,"values",()=>n.innerType._zod.values),e._zod.parse=(s,o)=>{if(o.direction==="backward")return n.innerType._zod.run(s,o);if(s.value===void 0)return s.value=n.defaultValue,s;const t=n.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>pn(a,n)):pn(t,n)}});function pn(e,n){return e.value===void 0&&(e.value=n.defaultValue),e}const Dt=l("$ZodPrefault",(e,n)=>{B.init(e,n),e._zod.optin="optional",D(e._zod,"values",()=>n.innerType._zod.values),e._zod.parse=(s,o)=>(o.direction==="backward"||s.value===void 0&&(s.value=n.defaultValue),n.innerType._zod.run(s,o))}),Ct=l("$ZodNonOptional",(e,n)=>{B.init(e,n),D(e._zod,"values",()=>{const s=n.innerType._zod.values;return s?new Set([...s].filter(o=>o!==void 0)):void 0}),e._zod.parse=(s,o)=>{const t=n.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>un(a,e)):un(t,e)}});function un(e,n){return!e.issues.length&&e.value===void 0&&e.issues.push({code:"invalid_type",expected:"nonoptional",input:e.value,inst:n}),e}const bt=l("$ZodCatch",(e,n)=>{B.init(e,n),D(e._zod,"optin",()=>n.innerType._zod.optin),D(e._zod,"optout",()=>n.innerType._zod.optout),D(e._zod,"values",()=>n.innerType._zod.values),e._zod.parse=(s,o)=>{if(o.direction==="backward")return n.innerType._zod.run(s,o);const t=n.innerType._zod.run(s,o);return t instanceof Promise?t.then(a=>(s.value=a.value,a.issues.length&&(s.value=n.catchValue({...s,error:{issues:a.issues.map(r=>L(r,o,U()))},input:s.value}),s.issues=[]),s)):(s.value=t.value,t.issues.length&&(s.value=n.catchValue({...s,error:{issues:t.issues.map(a=>L(a,o,U()))},input:s.value}),s.issues=[]),s)}}),$t=l("$ZodPipe",(e,n)=>{B.init(e,n),D(e._zod,"values",()=>n.in._zod.values),D(e._zod,"optin",()=>n.in._zod.optin),D(e._zod,"optout",()=>n.out._zod.optout),D(e._zod,"propValues",()=>n.in._zod.propValues),e._zod.parse=(s,o)=>{if(o.direction==="backward"){const a=n.out._zod.run(s,o);return a instanceof Promise?a.then(r=>Q(r,n.in,o)):Q(a,n.in,o)}const t=n.in._zod.run(s,o);return t instanceof Promise?t.then(a=>Q(a,n.out,o)):Q(t,n.out,o)}});function Q(e,n,s){return e.issues.length?(e.aborted=!0,e):n._zod.run({value:e.value,issues:e.issues},s)}const wt=l("$ZodReadonly",(e,n)=>{B.init(e,n),D(e._zod,"propValues",()=>n.innerType._zod.propValues),D(e._zod,"values",()=>n.innerType._zod.values),D(e._zod,"optin",()=>n.innerType._zod.optin),D(e._zod,"optout",()=>n.innerType._zod.optout),e._zod.parse=(s,o)=>{if(o.direction==="backward")return n.innerType._zod.run(s,o);const t=n.innerType._zod.run(s,o);return t instanceof Promise?t.then(dn):dn(t)}});function dn(e){return e.value=Object.freeze(e.value),e}const kt=l("$ZodCustom",(e,n)=>{I.init(e,n),B.init(e,n),e._zod.parse=(s,o)=>s,e._zod.check=s=>{const o=s.value,t=n.fn(o);if(t instanceof Promise)return t.then(a=>yn(a,s,o,e));yn(t,s,o,e)}});function yn(e,n,s,o){if(!e){const t={code:"custom",input:s,inst:o,path:[...o._zod.def.path??[]],continue:!o._zod.def.abort};o._zod.def.params&&(t.params=o._zod.def.params),n.issues.push(q(t))}}class Bt{constructor(){this._map=new Map,this._idmap=new Map}add(n,...s){const o=s[0];if(this._map.set(n,o),o&&typeof o=="object"&&"id"in o){if(this._idmap.has(o.id))throw new Error(`ID ${o.id} already exists in the registry`);this._idmap.set(o.id,n)}return this}clear(){return this._map=new Map,this._idmap=new Map,this}remove(n){const s=this._map.get(n);return s&&typeof s=="object"&&"id"in s&&this._idmap.delete(s.id),this._map.delete(n),this}get(n){const s=n._zod.parent;if(s){const o={...this.get(s)??{}};delete o.id;const t={...o,...this._map.get(n)};return Object.keys(t).length?t:void 0}return this._map.get(n)}has(n){return this._map.has(n)}}function zt(){return new Bt}const ee=zt();function Zt(e,n){return new e({type:"string",...y(n)})}function Et(e,n){return new e({type:"string",format:"email",check:"string_format",abort:!1,...y(n)})}function fn(e,n){return new e({type:"string",format:"guid",check:"string_format",abort:!1,...y(n)})}function It(e,n){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,...y(n)})}function xt(e,n){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v4",...y(n)})}function Pt(e,n){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v6",...y(n)})}function Tt(e,n){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v7",...y(n)})}function St(e,n){return new e({type:"string",format:"url",check:"string_format",abort:!1,...y(n)})}function Ot(e,n){return new e({type:"string",format:"emoji",check:"string_format",abort:!1,...y(n)})}function Nt(e,n){return new e({type:"string",format:"nanoid",check:"string_format",abort:!1,...y(n)})}function jt(e,n){return new e({type:"string",format:"cuid",check:"string_format",abort:!1,...y(n)})}function Rt(e,n){return new e({type:"string",format:"cuid2",check:"string_format",abort:!1,...y(n)})}function Gt(e,n){return new e({type:"string",format:"ulid",check:"string_format",abort:!1,...y(n)})}function Ut(e,n){return new e({type:"string",format:"xid",check:"string_format",abort:!1,...y(n)})}function Lt(e,n){return new e({type:"string",format:"ksuid",check:"string_format",abort:!1,...y(n)})}function Mt(e,n){return new e({type:"string",format:"ipv4",check:"string_format",abort:!1,...y(n)})}function Wt(e,n){return new e({type:"string",format:"ipv6",check:"string_format",abort:!1,...y(n)})}function Vt(e,n){return new e({type:"string",format:"cidrv4",check:"string_format",abort:!1,...y(n)})}function Jt(e,n){return new e({type:"string",format:"cidrv6",check:"string_format",abort:!1,...y(n)})}function Kt(e,n){return new e({type:"string",format:"base64",check:"string_format",abort:!1,...y(n)})}function Yt(e,n){return new e({type:"string",format:"base64url",check:"string_format",abort:!1,...y(n)})}function qt(e,n){return new e({type:"string",format:"e164",check:"string_format",abort:!1,...y(n)})}function Xt(e,n){return new e({type:"string",format:"jwt",check:"string_format",abort:!1,...y(n)})}function Ht(e,n){return new e({type:"string",format:"datetime",check:"string_format",offset:!1,local:!1,precision:null,...y(n)})}function Qt(e,n){return new e({type:"string",format:"date",check:"string_format",...y(n)})}function ea(e,n){return new e({type:"string",format:"time",check:"string_format",precision:null,...y(n)})}function na(e,n){return new e({type:"string",format:"duration",check:"string_format",...y(n)})}function sa(e,n){return new e({type:"number",checks:[],...y(n)})}function oa(e,n){return new e({type:"number",check:"number_format",abort:!1,format:"safeint",...y(n)})}function ta(e,n){return new e({type:"boolean",...y(n)})}function aa(e){return new e({type:"unknown"})}function ra(e,n){return new e({type:"never",...y(n)})}function hn(e,n){return new Nn({check:"less_than",...y(n),value:e,inclusive:!1})}function $e(e,n){return new Nn({check:"less_than",...y(n),value:e,inclusive:!0})}function Fn(e,n){return new jn({check:"greater_than",...y(n),value:e,inclusive:!1})}function we(e,n){return new jn({check:"greater_than",...y(n),value:e,inclusive:!0})}function An(e,n){return new Co({check:"multiple_of",...y(n),value:e})}function Mn(e,n){return new $o({check:"max_length",...y(n),maximum:e})}function ae(e,n){return new wo({check:"min_length",...y(n),minimum:e})}function Wn(e,n){return new ko({check:"length_equals",...y(n),length:e})}function la(e,n){return new Bo({check:"string_format",format:"regex",...y(n),pattern:e})}function ca(e){return new zo({check:"string_format",format:"lowercase",...y(e)})}function pa(e){return new Zo({check:"string_format",format:"uppercase",...y(e)})}function ia(e,n){return new Eo({check:"string_format",format:"includes",...y(n),includes:e})}function ua(e,n){return new Io({check:"string_format",format:"starts_with",...y(n),prefix:e})}function da(e,n){return new xo({check:"string_format",format:"ends_with",...y(n),suffix:e})}function X(e){return new Po({check:"overwrite",tx:e})}function ya(e){return X(n=>n.normalize(e))}function fa(){return X(e=>e.trim())}function ha(){return X(e=>e.toLowerCase())}function Fa(){return X(e=>e.toUpperCase())}function Aa(e,n,s){return new e({type:"array",element:n,...y(s)})}function ma(e,n,s){return new e({type:"custom",check:"custom",fn:n,...y(s)})}function ga(e){const n=_a(s=>(s.addIssue=o=>{if(typeof o=="string")s.issues.push(q(o,s.value,n._zod.def));else{const t=o;t.fatal&&(t.continue=!1),t.code??(t.code="custom"),t.input??(t.input=s.value),t.inst??(t.inst=n),t.continue??(t.continue=!n._zod.def.abort),s.issues.push(q(t))}},e(s.value,s)));return n}function _a(e,n){const s=new I({check:"custom",...y(n)});return s._zod.check=e,s}const va=l("ZodISODateTime",(e,n)=>{Ko.init(e,n),k.init(e,n)});function Da(e){return Ht(va,e)}const Ca=l("ZodISODate",(e,n)=>{Yo.init(e,n),k.init(e,n)});function ba(e){return Qt(Ca,e)}const $a=l("ZodISOTime",(e,n)=>{qo.init(e,n),k.init(e,n)});function wa(e){return ea($a,e)}const ka=l("ZodISODuration",(e,n)=>{Xo.init(e,n),k.init(e,n)});function Ba(e){return na(ka,e)}const za=(e,n)=>{In.init(e,n),e.name="ZodError",Object.defineProperties(e,{format:{value:s=>Ns(e,s)},flatten:{value:s=>Os(e,s)},addIssue:{value:s=>{e.issues.push(s),e.message=JSON.stringify(e.issues,ke,2)}},addIssues:{value:s=>{e.issues.push(...s),e.message=JSON.stringify(e.issues,ke,2)}},isEmpty:{get(){return e.issues.length===0}}})},P=l("ZodError",za,{Parent:Error}),Za=Se(P),Ea=Oe(P),Ia=le(P),xa=ce(P),Pa=Gs(P),Ta=Us(P),Sa=Ls(P),Oa=Ms(P),Na=Ws(P),ja=Vs(P),Ra=Js(P),Ga=Ks(P),z=l("ZodType",(e,n)=>(B.init(e,n),e.def=n,e.type=n.type,Object.defineProperty(e,"_def",{value:n}),e.check=(...s)=>e.clone({...n,checks:[...n.checks??[],...s.map(o=>typeof o=="function"?{_zod:{check:o,def:{check:"custom"},onattach:[]}}:o)]}),e.clone=(s,o)=>G(e,s,o),e.brand=()=>e,e.register=((s,o)=>(s.add(e,o),e)),e.parse=(s,o)=>Za(e,s,o,{callee:e.parse}),e.safeParse=(s,o)=>Ia(e,s,o),e.parseAsync=async(s,o)=>Ea(e,s,o,{callee:e.parseAsync}),e.safeParseAsync=async(s,o)=>xa(e,s,o),e.spa=e.safeParseAsync,e.encode=(s,o)=>Pa(e,s,o),e.decode=(s,o)=>Ta(e,s,o),e.encodeAsync=async(s,o)=>Sa(e,s,o),e.decodeAsync=async(s,o)=>Oa(e,s,o),e.safeEncode=(s,o)=>Na(e,s,o),e.safeDecode=(s,o)=>ja(e,s,o),e.safeEncodeAsync=async(s,o)=>Ra(e,s,o),e.safeDecodeAsync=async(s,o)=>Ga(e,s,o),e.refine=(s,o)=>e.check(Pr(s,o)),e.superRefine=s=>e.check(Tr(s)),e.overwrite=s=>e.check(X(s)),e.optional=()=>Dn(e),e.nullable=()=>Cn(e),e.nullish=()=>Dn(Cn(e)),e.nonoptional=s=>kr(e,s),e.array=()=>se(e),e.or=s=>Fr([e,s]),e.and=s=>mr(e,s),e.transform=s=>bn(e,vr(s)),e.default=s=>br(e,s),e.prefault=s=>wr(e,s),e.catch=s=>zr(e,s),e.pipe=s=>bn(e,s),e.readonly=()=>Ir(e),e.describe=s=>{const o=e.clone();return ee.add(o,{description:s}),o},Object.defineProperty(e,"description",{get(){var s;return(s=ee.get(e))==null?void 0:s.description},configurable:!0}),e.meta=(...s)=>{if(s.length===0)return ee.get(e);const o=e.clone();return ee.add(o,s[0]),o},e.isOptional=()=>e.safeParse(void 0).success,e.isNullable=()=>e.safeParse(null).success,e)),Vn=l("_ZodString",(e,n)=>{Ne.init(e,n),z.init(e,n);const s=e._zod.bag;e.format=s.format??null,e.minLength=s.minimum??null,e.maxLength=s.maximum??null,e.regex=(...o)=>e.check(la(...o)),e.includes=(...o)=>e.check(ia(...o)),e.startsWith=(...o)=>e.check(ua(...o)),e.endsWith=(...o)=>e.check(da(...o)),e.min=(...o)=>e.check(ae(...o)),e.max=(...o)=>e.check(Mn(...o)),e.length=(...o)=>e.check(Wn(...o)),e.nonempty=(...o)=>e.check(ae(1,...o)),e.lowercase=o=>e.check(ca(o)),e.uppercase=o=>e.check(pa(o)),e.trim=()=>e.check(fa()),e.normalize=(...o)=>e.check(ya(...o)),e.toLowerCase=()=>e.check(ha()),e.toUpperCase=()=>e.check(Fa())}),Ua=l("ZodString",(e,n)=>{Ne.init(e,n),Vn.init(e,n),e.email=s=>e.check(Et(La,s)),e.url=s=>e.check(St(Ma,s)),e.jwt=s=>e.check(Xt(ar,s)),e.emoji=s=>e.check(Ot(Wa,s)),e.guid=s=>e.check(fn(mn,s)),e.uuid=s=>e.check(It(ne,s)),e.uuidv4=s=>e.check(xt(ne,s)),e.uuidv6=s=>e.check(Pt(ne,s)),e.uuidv7=s=>e.check(Tt(ne,s)),e.nanoid=s=>e.check(Nt(Va,s)),e.guid=s=>e.check(fn(mn,s)),e.cuid=s=>e.check(jt(Ja,s)),e.cuid2=s=>e.check(Rt(Ka,s)),e.ulid=s=>e.check(Gt(Ya,s)),e.base64=s=>e.check(Kt(sr,s)),e.base64url=s=>e.check(Yt(or,s)),e.xid=s=>e.check(Ut(qa,s)),e.ksuid=s=>e.check(Lt(Xa,s)),e.ipv4=s=>e.check(Mt(Ha,s)),e.ipv6=s=>e.check(Wt(Qa,s)),e.cidrv4=s=>e.check(Vt(er,s)),e.cidrv6=s=>e.check(Jt(nr,s)),e.e164=s=>e.check(qt(tr,s)),e.datetime=s=>e.check(Da(s)),e.date=s=>e.check(ba(s)),e.time=s=>e.check(wa(s)),e.duration=s=>e.check(Ba(s))});function S(e){return Zt(Ua,e)}const k=l("ZodStringFormat",(e,n)=>{b.init(e,n),Vn.init(e,n)}),La=l("ZodEmail",(e,n)=>{jo.init(e,n),k.init(e,n)}),mn=l("ZodGUID",(e,n)=>{Oo.init(e,n),k.init(e,n)}),ne=l("ZodUUID",(e,n)=>{No.init(e,n),k.init(e,n)}),Ma=l("ZodURL",(e,n)=>{Ro.init(e,n),k.init(e,n)}),Wa=l("ZodEmoji",(e,n)=>{Go.init(e,n),k.init(e,n)}),Va=l("ZodNanoID",(e,n)=>{Uo.init(e,n),k.init(e,n)}),Ja=l("ZodCUID",(e,n)=>{Lo.init(e,n),k.init(e,n)}),Ka=l("ZodCUID2",(e,n)=>{Mo.init(e,n),k.init(e,n)}),Ya=l("ZodULID",(e,n)=>{Wo.init(e,n),k.init(e,n)}),qa=l("ZodXID",(e,n)=>{Vo.init(e,n),k.init(e,n)}),Xa=l("ZodKSUID",(e,n)=>{Jo.init(e,n),k.init(e,n)}),Ha=l("ZodIPv4",(e,n)=>{Ho.init(e,n),k.init(e,n)}),Qa=l("ZodIPv6",(e,n)=>{Qo.init(e,n),k.init(e,n)}),er=l("ZodCIDRv4",(e,n)=>{et.init(e,n),k.init(e,n)}),nr=l("ZodCIDRv6",(e,n)=>{nt.init(e,n),k.init(e,n)}),sr=l("ZodBase64",(e,n)=>{st.init(e,n),k.init(e,n)}),or=l("ZodBase64URL",(e,n)=>{tt.init(e,n),k.init(e,n)}),tr=l("ZodE164",(e,n)=>{at.init(e,n),k.init(e,n)}),ar=l("ZodJWT",(e,n)=>{lt.init(e,n),k.init(e,n)}),Jn=l("ZodNumber",(e,n)=>{Gn.init(e,n),z.init(e,n),e.gt=(o,t)=>e.check(Fn(o,t)),e.gte=(o,t)=>e.check(we(o,t)),e.min=(o,t)=>e.check(we(o,t)),e.lt=(o,t)=>e.check(hn(o,t)),e.lte=(o,t)=>e.check($e(o,t)),e.max=(o,t)=>e.check($e(o,t)),e.int=o=>e.check(gn(o)),e.safe=o=>e.check(gn(o)),e.positive=o=>e.check(Fn(0,o)),e.nonnegative=o=>e.check(we(0,o)),e.negative=o=>e.check(hn(0,o)),e.nonpositive=o=>e.check($e(0,o)),e.multipleOf=(o,t)=>e.check(An(o,t)),e.step=(o,t)=>e.check(An(o,t)),e.finite=()=>e;const s=e._zod.bag;e.minValue=Math.max(s.minimum??Number.NEGATIVE_INFINITY,s.exclusiveMinimum??Number.NEGATIVE_INFINITY)??null,e.maxValue=Math.min(s.maximum??Number.POSITIVE_INFINITY,s.exclusiveMaximum??Number.POSITIVE_INFINITY)??null,e.isInt=(s.format??"").includes("int")||Number.isSafeInteger(s.multipleOf??.5),e.isFinite=!0,e.format=s.format??null});function rr(e){return sa(Jn,e)}const lr=l("ZodNumberFormat",(e,n)=>{ct.init(e,n),Jn.init(e,n)});function gn(e){return oa(lr,e)}const cr=l("ZodBoolean",(e,n)=>{pt.init(e,n),z.init(e,n)});function pr(e){return ta(cr,e)}const ir=l("ZodUnknown",(e,n)=>{it.init(e,n),z.init(e,n)});function _n(){return aa(ir)}const ur=l("ZodNever",(e,n)=>{ut.init(e,n),z.init(e,n)});function dr(e){return ra(ur,e)}const yr=l("ZodArray",(e,n)=>{dt.init(e,n),z.init(e,n),e.element=n.element,e.min=(s,o)=>e.check(ae(s,o)),e.nonempty=s=>e.check(ae(1,s)),e.max=(s,o)=>e.check(Mn(s,o)),e.length=(s,o)=>e.check(Wn(s,o)),e.unwrap=()=>e.element});function se(e,n){return Aa(yr,e,n)}const fr=l("ZodObject",(e,n)=>{ft.init(e,n),z.init(e,n),D(e,"shape",()=>n.shape),e.keyof=()=>gr(Object.keys(e._zod.def.shape)),e.catchall=s=>e.clone({...e._zod.def,catchall:s}),e.passthrough=()=>e.clone({...e._zod.def,catchall:_n()}),e.loose=()=>e.clone({...e._zod.def,catchall:_n()}),e.strict=()=>e.clone({...e._zod.def,catchall:dr()}),e.strip=()=>e.clone({...e._zod.def,catchall:void 0}),e.extend=s=>Is(e,s),e.safeExtend=s=>xs(e,s),e.merge=s=>Ps(e,s),e.pick=s=>Zs(e,s),e.omit=s=>Es(e,s),e.partial=(...s)=>Ts(Kn,e,s[0]),e.required=(...s)=>Ss(Yn,e,s[0])});function vn(e,n){const s={type:"object",get shape(){return R(this,"shape",e?$s(e):{}),this.shape},...y(n)};return new fr(s)}const hr=l("ZodUnion",(e,n)=>{ht.init(e,n),z.init(e,n),e.options=n.options});function Fr(e,n){return new hr({type:"union",options:e,...y(n)})}const Ar=l("ZodIntersection",(e,n)=>{Ft.init(e,n),z.init(e,n)});function mr(e,n){return new Ar({type:"intersection",left:e,right:n})}const ze=l("ZodEnum",(e,n)=>{At.init(e,n),z.init(e,n),e.enum=n.entries,e.options=Object.values(n.entries);const s=new Set(Object.keys(n.entries));e.extract=(o,t)=>{const a={};for(const r of o)if(s.has(r))a[r]=n.entries[r];else throw new Error(`Key ${r} not found in enum`);return new ze({...n,checks:[],...y(t),entries:a})},e.exclude=(o,t)=>{const a={...n.entries};for(const r of o)if(s.has(r))delete a[r];else throw new Error(`Key ${r} not found in enum`);return new ze({...n,checks:[],...y(t),entries:a})}});function gr(e,n){const s=Array.isArray(e)?Object.fromEntries(e.map(o=>[o,o])):e;return new ze({type:"enum",entries:s,...y(n)})}const _r=l("ZodTransform",(e,n)=>{mt.init(e,n),z.init(e,n),e._zod.parse=(s,o)=>{if(o.direction==="backward")throw new wn(e.constructor.name);s.addIssue=a=>{if(typeof a=="string")s.issues.push(q(a,s.value,n));else{const r=a;r.fatal&&(r.continue=!1),r.code??(r.code="custom"),r.input??(r.input=s.value),r.inst??(r.inst=e),s.issues.push(q(r))}};const t=n.transform(s.value,s);return t instanceof Promise?t.then(a=>(s.value=a,s)):(s.value=t,s)}});function vr(e){return new _r({type:"transform",transform:e})}const Kn=l("ZodOptional",(e,n)=>{gt.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType});function Dn(e){return new Kn({type:"optional",innerType:e})}const Dr=l("ZodNullable",(e,n)=>{_t.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType});function Cn(e){return new Dr({type:"nullable",innerType:e})}const Cr=l("ZodDefault",(e,n)=>{vt.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType,e.removeDefault=e.unwrap});function br(e,n){return new Cr({type:"default",innerType:e,get defaultValue(){return typeof n=="function"?n():zn(n)}})}const $r=l("ZodPrefault",(e,n)=>{Dt.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType});function wr(e,n){return new $r({type:"prefault",innerType:e,get defaultValue(){return typeof n=="function"?n():zn(n)}})}const Yn=l("ZodNonOptional",(e,n)=>{Ct.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType});function kr(e,n){return new Yn({type:"nonoptional",innerType:e,...y(n)})}const Br=l("ZodCatch",(e,n)=>{bt.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType,e.removeCatch=e.unwrap});function zr(e,n){return new Br({type:"catch",innerType:e,catchValue:typeof n=="function"?n:()=>n})}const Zr=l("ZodPipe",(e,n)=>{$t.init(e,n),z.init(e,n),e.in=n.in,e.out=n.out});function bn(e,n){return new Zr({type:"pipe",in:e,out:n})}const Er=l("ZodReadonly",(e,n)=>{wt.init(e,n),z.init(e,n),e.unwrap=()=>e._zod.def.innerType});function Ir(e){return new Er({type:"readonly",innerType:e})}const xr=l("ZodCustom",(e,n)=>{kt.init(e,n),z.init(e,n)});function Pr(e,n={}){return ma(xr,e,n)}function Tr(e){return ga(e)}const qn=vn({title:S(),description:S(),slug:S(),authors:se(S()),reviewers:se(S()),date:S(),updated:S().optional(),tags:se(S()),readTime:rr(),image:vn({src:S(),alt:S()}).optional(),published:pr()}),Ze=Object.assign({"../articles/introduction-to-go.md":Ds});function Qr(){return Object.entries(Ze).map(([e,n])=>{if(!n.metadata)throw new Error(`No metadata found in ${e}`);return qn.parse(n.metadata)}).filter(e=>e.published).sort((e,n)=>+new Date(n.date)-+new Date(e.date))}function el(e){const n=`../articles/${e}.svx`,s=`../articles/${e}.md`,o=Ze[n]??Ze[s];if(!o)return null;const t=qn.parse(o.metadata);return t.published?{Content:o.default,metadata:t}:null}export{el as a,Qr as g};
